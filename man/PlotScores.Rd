% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PlotScores.R
\name{PlotScores}
\alias{PlotScores}
\title{Plot Gene Signature Scores as Violin Plots}
\usage{
PlotScores(
  ResultsList,
  ColorVariable = NULL,
  GroupingVariable,
  method = c("ssGSEA", "logmedian"),
  ColorValues = NULL,
  ncol = NULL,
  nrow = NULL,
  widthTitle = 10,
  y_limits = NULL,
  legend_nrow = NULL
)
}
\arguments{
\item{ResultsList}{A named list where each element is a data frame containing the calculated scores for a gene signature.
Each data frame must have a column named \code{sample} (matching the sample identifiers from the expression data)
and a column named \code{score}. Additional columns (e.g., metadata such as \code{Condition}, \code{Genotype}, etc.)
can be included, by running \code{CalculateScores} accordingly. \strong{(Required)}}

\item{ColorVariable}{A character string indicating the column name used to color the points.
If \code{NULL} (default), no color aesthetic is applied.}

\item{GroupingVariable}{A character string indicating the column name in each data frame that will be used for grouping
on the x-axis. \strong{(Required)}}

\item{method}{A character string indicating the scoring method used when running \code{CalculateScores}. Options are \code{"ssGSEA"}
or \code{"logmedian"}. \strong{This argument is mandatory.}}

\item{ColorValues}{An optional named vector that maps the unique values of \code{ColorVariable} to specific colors.
If not provided, a default brewer palette ("Paired") will be used.}

\item{ncol}{An optional numeric value specifying the number of columns in the grid layout for the combined plots.
If not provided, the function will compute a near-square grid (e.g., for 20 signatures, a 4x5 or 5x4 grid).}

\item{nrow}{An optional numeric value specifying the number of rows in the grid layout. If not provided,
it is computed based on the number of signatures and \code{ncol}.}

\item{widthTitle}{An optional integer specifying the maximum width of the title before inserting line breaks.
Titles will break at \verb{_}, \code{-}, or \code{:} where possible, or at the exact width if no such character is found.
Default is 10.}

\item{y_limits}{An optional numeric vector of length 2 specifying the limits of the y-axis. If \code{NULL}, the y-axis will adjust automatically.
\strong{(Optional)}}

\item{legend_nrow}{An optional numeric value specifying the number of rows in the legend. If \code{NULL}, the default number of rows is determined by ggplot2.
\strong{(Optional)}}
}
\value{
A combined ggplot object (created using \code{ggpubr::ggarrange} and \code{ggpubr::annotate_figure})
that displays a grid of violin plots. Each plot corresponds to one gene signature.
}
\description{
This function generates violin plots (with overlaid jittered points and median summary crossbars)
for each gene signature provided in \code{ResultsList}. Each element in \code{ResultsList} should be a
data frame with at least the following columns: \code{sample} (sample identifier) and \code{score} (the
calculated gene signature score). Any additional metadata columns will be added to the plots if available.
}
\details{
For each gene signature in \code{ResultsList}, the function creates a violin plot using \code{ggplot2}. The x-axis is determined
by the grouping variable (e.g., \code{Condition}), while the y-axis shows the signature score. Jittered points are overlaid
and optionally colored by \code{ColorVariable}. A median summary is added as a crossbar. The individual plots are arranged into a grid
using \code{ggpubr::ggarrange}, with a near-square layout if \code{ncol} and \code{nrow} are not explicitly provided.

Additionally, the function can customize the y-axis limits using the \code{y_limits} argument, which crops the y-axis without affecting the violin plots.
The number of rows in the legend can also be controlled using the \code{legend_nrow} argument.
}
\examples{
\dontrun{
  # Create example data for two gene signatures:
  sig1 <- data.frame(
    sample = c("Sample1", "Sample2", "Sample3"),
    score = c(0.5, 0.7, 0.6),
    Condition = c("A", "B", "A"),
    Genotype = c("WT", "Mut1", "Mut1")
  )
  sig2 <- data.frame(
    sample = c("Sample1", "Sample2", "Sample3"),
    score = c(0.3, 0.4, 0.5),
    Condition = c("A", "B", "A"),
    Genotype = c("WT", "Mut1", "Mut1")
  )
  results_list <- list(Signature1 = sig1, Signature2 = sig2)

  # Plot scores with Condition on the x-axis and points colored by Genotype,
  # using a custom color mapping and adjusting the y-axis limits and legend rows.
  custom_colors <- c("Mut1" = "blue", "WT" = "red")
  plot_obj <- PlotScores(ResultsList = results_list,
                         ColorVariable = "Genotype",
                         GroupingVariable = "Condition",
                         ColorValues = custom_colors,
                         y_limits = c(0, 1),
                         legend_nrow = 2)
  print(plot_obj)
}

}
