[{"path":"https://diseasetranscriptomicslab.github.io/markeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 markeR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rita Martins-Silva. Author, maintainer. Alexandre Kaizeler. Author, contributor. Nuno Luís Barbosa-Morais. Author, lead, thesis advisor.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Martins-Silva R, Kaizeler , Barbosa-Morais N (2025). markeR: R Toolkit Evaluating Gene Sets Phenotypic Markers. Gulbenkian Institute Molecular Medicine, Faculdade de Medicina, Universidade de Lisboa, Lisbon, Portugal. R package version 0.99.0, https://github.com/DiseaseTranscriptomicsLab/markeR.","code":"@Manual{,   title = {markeR: an R Toolkit for Evaluating Gene Sets as Phenotypic Markers},   author = {Rita Martins-Silva and Alexandre Kaizeler and Nuno L. Barbosa-Morais},   organization = {Gulbenkian Institute for Molecular Medicine, Faculdade de Medicina, Universidade de Lisboa},   address = {Lisbon, Portugal},   year = {2025},   note = {R package version 0.99.0},   url = {https://github.com/DiseaseTranscriptomicsLab/markeR}, }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/index.html","id":"marker-","dir":"","previous_headings":"","what":"An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers","title":"An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers","text":"cite markeR please use: Martins-Silva R, Kaizeler , Barbosa-Morais N (2025). markeR: R Toolkit Evaluating Gene Sets Phenotypic Markers. Gulbenkian Institute Molecular Medicine, Faculdade de Medicina, Universidade de Lisboa, Lisbon, Portugal. R package version 0.99.0, https://github.com/DiseaseTranscriptomicsLab/markeR. markeR provides suite methods using gene sets (signatures) quantify evaluate extent given gene signature marks specific phenotype gene expression data. package implements various scoring, enrichment classification approaches, along tools compute performance metrics visualize results.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/index.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of Contents","title":"An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers","text":"Installation Tutorials 1. Input Requirements 2. Select Mode Analysis 3.1 Score-Based Approach 3.2 Enrichment-Based Approach 4. Visualisation Evaluation 5. Individual Gene Exploration (Optional) 6. Compare Reference Gene Sets (Optional) Contact","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers","text":"user can install development version markeR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"DiseaseTranscriptomicsLab/markeR\")"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/index.html","id":"tutorials","dir":"","previous_headings":"","what":"Tutorials","title":"An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers","text":"following tutorials available: Benchmarking Mode Discovery Mode Signature Similarity","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/index.html","id":"common-workflow","dir":"","previous_headings":"","what":"Common Workflow","title":"An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers","text":"markeR provides modular pipeline quantify transcriptomic signatures assess association phenotypic clinical variables. typical workflow includes following steps:","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/index.html","id":"id_1-input-requirements","dir":"","previous_headings":"Common Workflow","what":"1. Input Requirements","title":"An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers","text":"Depending analysis mode, inputs vary slightly. Gene Set(s): named list element represents one gene set: Use character vector gene sets direction enrichment known. Use data frame gene names directionality column (-1 -regulated, +1 -regulated) structure supports Discovery Mode (single gene set) Benchmarking Mode (multiple gene sets). Expression Data Frame: filtered normalised gene expression data frame (genes × samples). Row names must gene identifiers, column names must match sample IDs metadata. Sample Metadata: data frame annotations sample, sample ID first column. row names must match column names expression matrix.","code":"# Example  gene_sets #> $Set1 #> [1] \"GeneA\" \"GeneB\" \"GeneC\" \"GeneD\" #>  #> $Set2 #>    gene direction #> 1 GeneX         1 #> 2 GeneY        -1 #> 3 GeneZ         1 head(expr_df) #>        Sample1  Sample2  Sample3  Sample4  Sample5 #> GeneA 3.879049 7.448164 2.864353 5.852928 3.610586 #> GeneB 4.539645 5.719628 4.564050 4.409857 4.584165 #> GeneC 8.117417 5.801543 2.947991 6.790251 2.469207 #> GeneD 5.141017 5.221365 3.542218 6.756267 9.337912 #> GeneX 5.258575 3.888318 3.749921 6.643162 7.415924 #> GeneY 8.430130 8.573826 1.626613 6.377281 2.753783 metadata #>   SampleID Condition Age #> 1  Sample1   Control  49 #> 2  Sample2 Treatment  44 #> 3  Sample3   Control  46 #> 4  Sample4 Treatment  49 #> 5  Sample5   Control  38"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/index.html","id":"id_2-select-mode-of-analysis","dir":"","previous_headings":"Common Workflow","what":"2. Select Mode of Analysis","title":"An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers","text":"Discovery Mode: Explore single, well-characterised gene set relates specific variable interest. Suitable hypothesis generation signature projection. Benchmarking Mode: Evaluate one gene sets multiple metadata variables using standardised scoring effect size framework. mode provides comprehensive visualisations comparisons across methods.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/index.html","id":"id_3-choose-a-quantification-approach","dir":"","previous_headings":"Common Workflow","what":"3. Choose a Quantification Approach","title":"An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers","text":"markeR supports two complementary strategies quantifying association gene sets phenotypes:","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/index.html","id":"id_31-score-based-approach","dir":"","previous_headings":"Common Workflow > 3. Choose a Quantification Approach","what":"3.1 Score-Based Approach","title":"An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers","text":"strategy generates single numeric score per sample, reflecting activity gene set. enables flexible downstream analyses, including comparisons across phenotypic groups. Three scoring methods available: Log2-median: Calculates median log2 expression genes set. Sensitive absolute shifts expression. Ranking: Ranks genes within sample averages ranks gene set members. Captures relative ordering rather magnitude. ssGSEA: Computes single-sample gene set enrichment score using ssGSEA algorithm. Reflects coordinated - -regulation set sample. methods vary assumptions sensitivity. Robust gene sets expected perform consistently across three.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/index.html","id":"id_32-enrichment-based-approach","dir":"","previous_headings":"Common Workflow > 3. Choose a Quantification Approach","what":"3.2 Enrichment-Based Approach","title":"An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers","text":"approach uses classical gene set enrichment analysis (GSEA) framework evaluate whether gene set significantly overrepresented top bottom ranked list genes (e.g., ranked fold change correlation phenotype). GSEA: Computes Normalised Enrichment Score (NES) contrast variable interest, adjusting gene set size multiple testing. Use approach interested collective behaviour gene sets relation ranked differential signals.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/index.html","id":"id_4-visualisation-and-evaluation","dir":"","previous_headings":"Common Workflow","what":"4. Visualisation and Evaluation","title":"An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers","text":"Benchmarking Mode, markeR offers range visual summaries: Violin scatter plots showing score distributions phenotype Volcano plots heatmaps based effect sizes (Cohen’s d f) ROC curves AUC values Null distribution testing using random gene sets matched size directionality Discovery Mode, output focuses single gene set: Score distributions phenotype Pairwise contrasts (Cohen’s d) overall effect sizes (Cohen’s f) Enrichment score summaries (NES) adjusted p-values (e.g., lollipop plots) Benchmarking mode offers comprehensive set features allows users seamlessly move discovery benchmarking mode variable interest identified testing required. main difference Discovery mode Benchmarking designed evaluate multiple gene sets simultaneously, whereas Discovery mode focuses quantifying single, robust gene set.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/index.html","id":"id_5-individual-gene-exploration-optional","dir":"","previous_headings":"Common Workflow","what":"5. Individual Gene Exploration (Optional)","title":"An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers","text":"better understand contribution individual genes within gene set identify whether specific genes drive overall signal, markeR offers suite gene-level exploratory analyses, including: Expression heatmaps genes across samples groups Violin plots showing expression distributions individual genes Correlation heatmaps reveal co-expression patterns among genes set ROC curves AUC values individual genes evaluate discriminatory power Effect size calculations (Cohen’s d) per gene quantify differential expression Principal Component Analysis (PCA) gene set genes assess variance explained sample clustering","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/index.html","id":"id_6-compare-with-reference-gene-sets-optional","dir":"","previous_headings":"Common Workflow","what":"6. Compare with Reference Gene Sets (Optional)","title":"An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers","text":"markeR allows comparison user-defined gene sets reference sets (e.g., MSigDB) using: Jaccard Index: Measures gene overlap relative union size. Log Odds Ratio (logOR): Computes enrichment using user-defined gene universe Fisher’s exact test. Filters can applied based similarity thresholds (e.g., minimum Jaccard, , p-value). 📩 questions concerns, feel free reach : Rita Martins-Silva Email: rita.silva@gimm.pt","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/AUC_Scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Heatmaps for AUC Scores using ggplot2 — AUC_Scores","title":"Generate Heatmaps for AUC Scores using ggplot2 — AUC_Scores","text":"function computes AUC scores multiple gene signatures scoring methods, generates heatmap gene signature. heatmap displays AUC scores, contrasts rows methods columns. heatmaps arranged grid layout.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/AUC_Scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Heatmaps for AUC Scores using ggplot2 — AUC_Scores","text":"","code":"AUC_Scores(   data,   metadata,   gene_sets,   method = c(\"logmedian\", \"ssGSEA\", \"ranking\", \"all\"),   mode = c(\"simple\", \"medium\", \"extensive\"),   variable,   nrow = NULL,   ncol = NULL,   limits = NULL,   widthTitle = 22,   titlesize = 12,   ColorValues = c(\"#F9F4AE\", \"#B44141\"),   title = NULL )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/AUC_Scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Heatmaps for AUC Scores using ggplot2 — AUC_Scores","text":"data data frame gene expression data genes rows samples columns. Row names contain gene names column names sample identifiers. metadata data frame sample metadata. first column must contain sample identifiers matching data. gene_sets named list gene sets. method character string specifying scoring method(s) (\"logmedian\", \"ssGSEA\", \"ranking\", \"\"). mode string specifying level detail contrasts. Options : \"simple\": Pairwise comparisons (e.g., - B). \"medium\": Pairwise comparisons plus comparisons mean groups. \"extensive\": possible groupwise contrasts, ensuring balance number terms side. variable string specifying grouping variable metadata used computing AUC comparisons. nrow Optional. integer specifying number rows heatmap grid. NULL, number rows computed automatically. ncol Optional. integer specifying number columns heatmap grid. NULL, number columns computed automatically. limits Optional. numeric vector length 2 specifying color scale limits (e.g., c(min, max)). NULL, limits determined data. widthTitle integer specifying width used wrapping gene set signature names heatmap titles. Default 22. titlesize integer specifying text size heatmap titles. Default 12. ColorValues character vector specifying colors gradient fill heatmaps. Default c(\"#F9F4AE\", \"#B44141\"). title Title grid plots.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/AUC_Scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Heatmaps for AUC Scores using ggplot2 — AUC_Scores","text":"list two elements: plt combined heatmap arranged grid using ggpubr::ggarrange. data list containing AUC scores gene signature, computed ROCAUC_Scores_Calculate.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/AUC_Scores.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Heatmaps for AUC Scores using ggplot2 — AUC_Scores","text":"function first calculates AUC scores gene signature using ROCAUC_Scores_Calculate. resulting matrices converted long format cell heatmap can display AUC value. title heatmap dynamically created. heatmaps adjusted display axis text ticks left-column bottom row, combined grid layout. neither nrow ncol specified, layout automatically determined best approximate square grid.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/AUC_Scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Heatmaps for AUC Scores using ggplot2 — AUC_Scores","text":"","code":"if (FALSE) { # \\dontrun{   result <- AUC_Scores(     data = gene_data,     metadata = sample_metadata,     gene_sets = gene_sets,     method = \"ssGSEA\",     variable = \"Condition\",     nrow = 2,     ncol = 3,     limits = c(0, 1),     widthTitle = 30,     titlesize = 14,     ColorValues = c(\"#F9F4AE\", \"#B44141\")   )   print(result$plt) } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Gene Signature Scores using Score-Based Approaches — CalculateScores","title":"Calculate Gene Signature Scores using Score-Based Approaches — CalculateScores","text":"function calculates gene signature score sample based one predefined gene sets (signatures).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Gene Signature Scores using Score-Based Approaches — CalculateScores","text":"","code":"CalculateScores(   data,   metadata,   gene_sets,   method = c(\"ssGSEA\", \"logmedian\", \"ranking\", \"all\") )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Gene Signature Scores using Score-Based Approaches — CalculateScores","text":"data data frame normalized (non-transformed) counts row gene column sample. row names contain gene names, column names contain sample identifiers. (Required) metadata data frame describing attributes sample. row corresponds sample column attribute. first column metadata sample identifiers (.e., column names data). Defaults NULL metadata provided. gene_sets Gene set input. (Required) using unidirectional gene sets, provide named list element vector gene names representing gene signature. names list elements correspond labels signature. using bidirectional gene sets, provide named list element data frame. names list elements correspond labels signature, data frame contain following structure: first column contain gene names. second column indicate expected direction enrichment (1 upregulated genes, -1 downregulated genes). method character string indicating scoring method use. Options \"ssGSEA\", \"logmedian\", \"ranking\", \"\" (compute scores using methods). Defaults \"logmedian\".","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Gene Signature Scores using Score-Based Approaches — CalculateScores","text":"single method chosen, data frame containing calculated scores gene signature, including metadata provided. method = \"\", list returned element corresponds scoring method contains respective data frame scores. sample sample identifier (matching column names input data). score calculated gene signature score corresponding sample. (metadata) additional columns metadata data frame provided user, available.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Gene Signature Scores using Score-Based Approaches — CalculateScores","text":"ssGSEA Uses single-sample Gene Set Enrichment Analysis (ssGSEA) method compute enrichment score signature sample. method uses adaptation gsva() function GSVA package compute enrichment score, representing absolute enrichment gene set sample. logmedian Computes, sample, score sum normalized (log2-median-centered) expression values signature genes divided number genes signature. ranking Computes gene signature scores sample ranking expression signature genes dataset normalizing score based total number genes. Computes gene signature scores using three methods (ssGSEA, logmedian, ranking). function returns list containing results method.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Gene Signature Scores using Score-Based Approaches — CalculateScores","text":"","code":"if (FALSE) { # \\dontrun{   # Assume 'gene_data' is your gene expression data frame and 'sample_metadata'   # is your metadata. Define a list of gene signatures as follows:   gene_sets <- list(     \"Signature_A\" = c(\"Gene1\", \"Gene5\", \"Gene10\", \"Gene20\"),     \"Signature_B\" = c(\"Gene2\", \"Gene6\", \"Gene15\", \"Gene30\")   )    # Using the ssGSEA method:   scores_ssgsea <- calculate_signature_score(data = gene_data,                                              metadata = sample_metadata,                                              gene_sets = gene_sets,                                              method = \"ssGSEA\")    # Using the logmedian method (default):   scores_logmedian <- calculate_signature_score(data = gene_data,                                                 gene_sets = gene_sets)    # Using all methods:   scores_all <- calculate_signature_score(data = gene_data,                                           metadata = sample_metadata,                                           gene_sets = gene_sets,                                           method = \"all\") } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_Ranking.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Gene Signature Scores using Ranking Approach — CalculateScores_Ranking","title":"Calculate Gene Signature Scores using Ranking Approach — CalculateScores_Ranking","text":"Computes gene signature scores sample ranking expression signature genes dataset normalizing score based total number genes.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_Ranking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Gene Signature Scores using Ranking Approach — CalculateScores_Ranking","text":"","code":"CalculateScores_Ranking(data, metadata = NULL, gene_sets)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_Ranking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Gene Signature Scores using Ranking Approach — CalculateScores_Ranking","text":"data data frame rows represent genes, columns represent samples, values correspond gene expression levels. (Required) metadata data frame containing sample metadata. first column must contain sample names. (Optional) gene_sets named list gene sets. (Required) Unidirectional gene sets: Provide named list element vector gene names. Bidirectional gene sets: Provide named list element data frame. first column contain gene names. second column indicate expected direction enrichment (1 upregulated genes, -1 downregulated genes).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_Ranking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Gene Signature Scores using Ranking Approach — CalculateScores_Ranking","text":"named list data frames, data frame contains: sample: Sample name. score: Normalized ranking score given gene signature. Additional metadata columns (metadata provided).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_Ranking.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Gene Signature Scores using Ranking Approach — CalculateScores_Ranking","text":"function first validates inputs extracts relevant genes dataset. unidirectional signatures, computes rankings based gene expression levels. bidirectional signatures, computes separate rankings upregulated downregulated genes, calculates final score subtracting downregulated rankings upregulated rankings. final scores normalized dividing total number genes. metric suitable compare absolute values different gene sets, .e. used relative comparisons samples using gene set.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_Ranking.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Gene Signature Scores using Ranking Approach — CalculateScores_Ranking","text":"","code":"if (FALSE) { # \\dontrun{ # Example dataset with 5 genes (rows) and 3 samples (columns) set.seed(123) data <- as.data.frame(matrix(runif(15, 1, 100), nrow = 5, ncol = 3)) rownames(data) <- paste0(\"Gene_\", 1:5) colnames(data) <- paste0(\"Sample_\", 1:3)  # Unidirectional gene set example gene_sets <- list(Signature1 = c(\"Gene_1\", \"Gene_3\", \"Gene_5\"))  # Compute scores scores <- CalculateScores_Ranking(data, gene_sets = gene_sets) print(scores) } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_logmedian.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Gene Signature Scores using Log-Median Approach — CalculateScores_logmedian","title":"Calculate Gene Signature Scores using Log-Median Approach — CalculateScores_logmedian","text":"Computes log2-median-centered scores sample based gene signature expression.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_logmedian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Gene Signature Scores using Log-Median Approach — CalculateScores_logmedian","text":"","code":"CalculateScores_logmedian(data, metadata = NULL, gene_sets)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_logmedian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Gene Signature Scores using Log-Median Approach — CalculateScores_logmedian","text":"data data frame normalized counts row gene column sample. metadata data frame containing sample metadata (optional). provided, resulting scores merged metadata. gene_sets named list representing gene sets. (Required) Unidirectional gene sets: element vector gene names representing signature. names list elements serve labels signatures. Bidirectional gene sets: element data frame : first column containing gene names. second column specifying expected direction enrichment: 1 upregulated genes. -1 downregulated genes.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_logmedian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Gene Signature Scores using Log-Median Approach — CalculateScores_logmedian","text":"list data frames containing log-median scores signature. metadata provided, merged scores.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_logmedian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Gene Signature Scores using Log-Median Approach — CalculateScores_logmedian","text":"","code":"if (FALSE) { # \\dontrun{ data <- matrix(rnorm(1000), nrow = 100, ncol = 10) colnames(data) <- paste0(\"Sample_\", 1:10) rownames(data) <- paste0(\"Gene_\", 1:100) gene_sets <- list(   Signature_A = sample(rownames(data), 10),   Signature_B = data.frame(Gene = sample(rownames(data), 10), Direction =   sample(c(1, -1), 10, replace = TRUE)) ) scores <- CalculateScores_logmedian(data, gene_sets = gene_sets) } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Gene Signature Scores using ssGSEA — CalculateScores_ssGSEA","title":"Calculate Gene Signature Scores using ssGSEA — CalculateScores_ssGSEA","text":"Computes enrichment score gene signature sample using single-sample Gene Set Enrichment Analysis (ssGSEA).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Gene Signature Scores using ssGSEA — CalculateScores_ssGSEA","text":"","code":"CalculateScores_ssGSEA(data, metadata = NULL, gene_sets)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Gene Signature Scores using ssGSEA — CalculateScores_ssGSEA","text":"data data frame normalized (non-transformed) counts row gene column sample. metadata data frame containing sample metadata (optional). gene_sets Gene set input. (Required) using unidirectional gene sets, provide named list element vector gene names representing gene signature. names list elements correspond labels signature. using bidirectional gene sets, provide named list element data frame. names list elements correspond labels signature, data frame contain following structure: first column contain gene names. second column indicate expected direction enrichment (1 upregulated genes, -1 downregulated genes).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Gene Signature Scores using ssGSEA — CalculateScores_ssGSEA","text":"list data frames containing ssGSEA scores signature.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA_bidirectional.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ssGSEA Scores for Bidirectional Gene Signatures — CalculateScores_ssGSEA_bidirectional","title":"Calculate ssGSEA Scores for Bidirectional Gene Signatures — CalculateScores_ssGSEA_bidirectional","text":"Computes single-sample Gene Set Enrichment Analysis (ssGSEA) scores sample using bidirectional gene signature (separating upregulated downregulated genes).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA_bidirectional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ssGSEA Scores for Bidirectional Gene Signatures — CalculateScores_ssGSEA_bidirectional","text":"","code":"CalculateScores_ssGSEA_bidirectional(data, signature)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA_bidirectional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ssGSEA Scores for Bidirectional Gene Signatures — CalculateScores_ssGSEA_bidirectional","text":"data data frame normalized (non-transformed) counts rows genes columns samples. signature data frame : first column containing gene names. second column (Signal) indicating expected direction enrichment (1 upregulated genes, -1 downregulated genes).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA_bidirectional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ssGSEA Scores for Bidirectional Gene Signatures — CalculateScores_ssGSEA_bidirectional","text":"data frame containing: sample: Sample name. score: Final ssGSEA enrichment score (computed difference upregulated downregulated scores).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA_bidirectional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate ssGSEA Scores for Bidirectional Gene Signatures — CalculateScores_ssGSEA_bidirectional","text":"input gene expression matrix (data) log2-transformed applying ssGSEA. Upregulated downregulated genes analyzed separately. upregulated downregulated genes present, final score computed : $$score = (score_{} \\* \\frac{|\\_genes|}{|total\\_genes|}) - (score_{} \\* \\frac{|\\_genes|}{|total\\_genes|})$$ downregulated genes present, upregulated score used. results reshaped long-format data frame one score per sample.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA_bidirectional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate ssGSEA Scores for Bidirectional Gene Signatures — CalculateScores_ssGSEA_bidirectional","text":"","code":"if (FALSE) { # \\dontrun{ # Example dataset with 5 genes (rows) and 3 samples (columns) set.seed(123) data <- matrix(runif(15, 1, 100), nrow = 5, ncol = 3) rownames(data) <- paste0(\"Gene_\", 1:5) colnames(data) <- paste0(\"Sample_\", 1:3)  # Define a bidirectional gene signature signature <- data.frame(Gene = c(\"Gene_1\", \"Gene_3\", \"Gene_5\"),                         Signal = c(1, -1, 1))  # Compute scores scores <- CalculateScores_ssGSEA_bidirectional(data, signature = signature) print(scores) } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA_unidirectional.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ssGSEA Scores for Unidirectional Gene Signatures — CalculateScores_ssGSEA_unidirectional","title":"Calculate ssGSEA Scores for Unidirectional Gene Signatures — CalculateScores_ssGSEA_unidirectional","text":"Computes single-sample Gene Set Enrichment Analysis (ssGSEA) scores sample using unidirectional gene signature.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA_unidirectional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ssGSEA Scores for Unidirectional Gene Signatures — CalculateScores_ssGSEA_unidirectional","text":"","code":"CalculateScores_ssGSEA_unidirectional(data, signature)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA_unidirectional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ssGSEA Scores for Unidirectional Gene Signatures — CalculateScores_ssGSEA_unidirectional","text":"data data frame normalized (non-transformed) counts rows genes columns samples. signature vector gene names representing unidirectional gene signature.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA_unidirectional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ssGSEA Scores for Unidirectional Gene Signatures — CalculateScores_ssGSEA_unidirectional","text":"data frame containing: sample: Sample name. score: ssGSEA enrichment score gene signature.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CalculateScores_ssGSEA_unidirectional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate ssGSEA Scores for Unidirectional Gene Signatures — CalculateScores_ssGSEA_unidirectional","text":"","code":"if (FALSE) { # \\dontrun{ # Example dataset with 5 genes (rows) and 3 samples (columns) set.seed(123) data <- matrix(runif(15, 1, 100), nrow = 5, ncol = 3) rownames(data) <- paste0(\"Gene_\", 1:5) colnames(data) <- paste0(\"Sample_\", 1:3)  # Define a unidirectional gene signature signature <- c(\"Gene_1\", \"Gene_3\", \"Gene_5\")  # Compute scores scores <- CalculateScores_ssGSEA_unidirectional(data, signature = signature) print(scores) } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenD_IndividualGenes.html","id":null,"dir":"Reference","previous_headings":"","what":"Cohen's d Heatmap Function — CohenD_IndividualGenes","title":"Cohen's d Heatmap Function — CohenD_IndividualGenes","text":"function computes Cohen's d gene based gene expression data sample metadata. gene, compares expression values samples condition_var equals class (positive class) versus remaining samples. resulting effect sizes visualized heatmap.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenD_IndividualGenes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cohen's d Heatmap Function — CohenD_IndividualGenes","text":"","code":"CohenD_IndividualGenes(   data,   metadata,   genes = NULL,   condition_var,   class,   group_var = NULL,   title = NULL,   titlesize = 16,   params = list() )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenD_IndividualGenes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cohen's d Heatmap Function — CohenD_IndividualGenes","text":"data data frame matrix containing gene expression data, genes rows samples columns. metadata data frame containing sample metadata. first column contain sample identifiers match column names data. genes character vector specifying genes include. NULL (default), genes data used. warning issued 30 genes selected. condition_var character string specifying column name metadata representing condition interest. (Mandatory; default.) class character string vector specifying positive class label condition. (Mandatory; default.) group_var optional character string specifying column name metadata used grouping samples. provided (NULL), samples treated single group. title optional character string specifying custom title heatmap. provided, default title generated. titlesize numeric value specifying size title. Default 14. params list additional parameters customizing heatmap. Possible elements include: cluster_rows Logical; TRUE (default), rows clustered. cluster_columns Logical; TRUE (default), columns clustered. colors vector length 2 colors used minimum maximum values color scale. Defaults c(\"#FFFFFF\", \"#21975C\"), note default mapping Cohen's d set divergent scale. limits numeric vector length 2 specifying minimum maximum values color scale. provided, defaults c(-2, 2). name character string legend title color scale. Default \"Cohen's d\". row_names_gp Optional graphical parameters row names (passed ComplexHeatmap). column_names_gp Optional graphical parameters column names (passed ComplexHeatmap).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenD_IndividualGenes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cohen's d Heatmap Function — CohenD_IndividualGenes","text":"Invisibly returns list containing: plot ComplexHeatmap object Cohen's d heatmap. data data frame calculated Cohen's d values gene group.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenD_IndividualGenes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cohen's d Heatmap Function — CohenD_IndividualGenes","text":"function computes Cohen's d gene comparing expression values samples condition_var == class . effect sizes visualized heatmap using ComplexHeatmap. group_var provided, samples treated single group.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenD_IndividualGenes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cohen's d Heatmap Function — CohenD_IndividualGenes","text":"","code":"if (FALSE) { # \\dontrun{   result <- CohenDHeatmap(data = myData,                           metadata = myMetadata,                           genes = c(\"Gene1\", \"Gene2\", \"Gene3\"),                           condition_var = \"Genotype\",                           class = \"Mutant\",                           group_var = \"CellType\",                           title = \"Cohen's d Heatmap\",                           params = list(limits = c(-2, 2))) } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenD_allConditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Cohen\\'s d for All Gene Signatures Across Conditions — CohenD_allConditions","title":"Compute Cohen\\'s d for All Gene Signatures Across Conditions — CohenD_allConditions","text":"Computes Cohen\\'s d effect sizes corresponding p-values gene signatures using scores calculated various methods. function first computes gene signature scores using CalculateScores \"\" option, flattens results, computes pairwise comparisons specified grouping variable.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenD_allConditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Cohen\\'s d for All Gene Signatures Across Conditions — CohenD_allConditions","text":"","code":"CohenD_allConditions(   data,   metadata,   gene_sets,   variable,   mode = c(\"simple\", \"medium\", \"extensive\") )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenD_allConditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Cohen\\'s d for All Gene Signatures Across Conditions — CohenD_allConditions","text":"data data frame gene expression data, genes rows samples columns. metadata data frame containing sample metadata. first column contain sample identifiers matching column names data. gene_sets named list gene sets. unidirectional gene sets, element vector gene names; bidirectional gene sets, element data frame first column contains gene names second column indicates expected direction (1 upregulated, -1 downregulated). variable string specifying grouping variable metadata used compare scores conditions. mode string specifying level detail contrasts. Options : \"simple\": Pairwise comparisons (e.g., - B). \"medium\": Pairwise comparisons plus comparisons mean groups. \"extensive\": possible groupwise contrasts, ensuring balance number terms side.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenD_allConditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Cohen\\'s d for All Gene Signatures Across Conditions — CohenD_allConditions","text":"named list element corresponds gene signature. signature element list three components: CohenD data frame rows methods columns group contrasts (formatted \\\"Group1:Group2\\\"), containing computed Cohen\\'s d effect sizes. PValue data frame structure CohenD containing corresponding p-values. padj data frame structure PValue containing corresponding p-values corrected using BH method, signatures contrasts, method.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenD_allConditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Cohen\\'s d for All Gene Signatures Across Conditions — CohenD_allConditions","text":"","code":"if (FALSE) { # \\dontrun{   # Assume gene_data is your gene expression data frame, sample_metadata is your metadata, and   # gene_sets is a named list of gene sets.   results <- CohenD_allConditions(data = gene_data, metadata = sample_metadata,                                   gene_sets = gene_sets, variable = \"Condition\")   # Access Cohen's d for a specific signature:   results$Signature_A$CohenD } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenF_allConditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Cohen's f for All Gene Signatures Across a Categorical Variable — CohenF_allConditions","title":"Compute Cohen's f for All Gene Signatures Across a Categorical Variable — CohenF_allConditions","text":"Computes Cohen's f effect sizes corresponding p-values gene signatures using scores calculated multiple methods. function first computes gene signature scores using CalculateScores \"\" option, flattens results, fits linear models using specified variable estimate effect sizes.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenF_allConditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Cohen's f for All Gene Signatures Across a Categorical Variable — CohenF_allConditions","text":"","code":"CohenF_allConditions(data, metadata, gene_sets, variable)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenF_allConditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Cohen's f for All Gene Signatures Across a Categorical Variable — CohenF_allConditions","text":"data data frame gene expression data, genes rows samples columns. metadata data frame containing sample metadata. first column contain sample identifiers matching column names data. gene_sets named list gene sets. unidirectional gene sets, element vector gene names; bidirectional gene sets, element data frame first column contains gene names second column indicates expected direction (1 upregulated, -1 downregulated). variable string specifying categorical variable metadata used model gene signature scores.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenF_allConditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Cohen's f for All Gene Signatures Across a Categorical Variable — CohenF_allConditions","text":"named list element corresponds gene signature. signature element list three components: CohenF data frame rows scoring methods columns variable used linear model (usually one column), containing computed Cohen's f effect size. PValue data frame corresponding raw p-values linear model method. padj data frame adjusted p-values (Benjamini-Hochberg method) across signatures contrasts, per method.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CohenF_allConditions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Cohen's f for All Gene Signatures Across a Categorical Variable — CohenF_allConditions","text":"function designed use categorical variables, goal evaluate overall group effect (e.g., using ANOVA) across multiple levels.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CorrelationHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"CorrelationHeatmap: Generate correlation heatmaps with optional grouping — CorrelationHeatmap","title":"CorrelationHeatmap: Generate correlation heatmaps with optional grouping — CorrelationHeatmap","text":"function generates correlation heatmaps using ComplexHeatmap package. allows users compute correlation matrices set genes visualize heatmap. grouping variable provided (separate.), multiple heatmaps created, corresponding different level grouping variable.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CorrelationHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CorrelationHeatmap: Generate correlation heatmaps with optional grouping — CorrelationHeatmap","text":"","code":"CorrelationHeatmap(   data,   metadata = NULL,   genes,   separate.by = NULL,   method = c(\"pearson\", \"spearman\", \"kendall\"),   colorlist = list(low = \"blue\", mid = \"white\", high = \"red\"),   limits_colorscale = NULL,   widthTitle = 16,   title = NULL,   cluster_rows = TRUE,   cluster_columns = TRUE,   detailedresults = FALSE,   legend_position = c(\"right\", \"top\"),   titlesize = 20,   show_row_names = TRUE,   show_column_names = TRUE )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CorrelationHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CorrelationHeatmap: Generate correlation heatmaps with optional grouping — CorrelationHeatmap","text":"data numeric counts data frame rows correspond genes columns samples. metadata data frame containing metadata. Required separate.specified. genes character vector gene names included correlation analysis. separate.character string specifying column metadata separate heatmaps (e.g., \"Condition\"). method Correlation method: \"pearson\" (default), \"spearman\", \"kendall\". colorlist named list specifying colors heatmap (low, mid, high), corresponding limits colorscale. limits_colorscale numeric vector length 3 defining limits color scale (default: min, 0, max). widthTitle Numeric value controlling width plot title. Default 16. title string specifying main title heatmap(s). cluster_rows Logical; whether cluster rows (default = TRUE). cluster_columns Logical; whether cluster columns (default = TRUE). detailedresults Logical; TRUE, additional analysis results stored output list (default = FALSE). legend_position Character; position legend (\"right\" - default - \"top\"). titlesize Numeric; font size heatmap title (default = 20). show_row_names character string specifying whether row names (genes) displayed. show_column_names character string specifying whether column names (samples) displayed.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CorrelationHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CorrelationHeatmap: Generate correlation heatmaps with optional grouping — CorrelationHeatmap","text":"list containing: data Correlation matrices condition (single matrix separate.= NULL). plot generated heatmap object(s). aux list containing additional analysis results detailedresults = TRUE. separate.specified: list element corresponds different condition. sublist contains: method: correlation method used. corrmatrix: computed correlation matrix condition. metadata: subset metadata corresponding condition. heatmap: ComplexHeatmap object drawn. separate.= NULL (single heatmap case): list containing: method: correlation method. corrmatrix: computed correlation matrix.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/CorrelationHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CorrelationHeatmap: Generate correlation heatmaps with optional grouping — CorrelationHeatmap","text":"","code":"if (FALSE) { # \\dontrun{ data_matrix <- matrix(rnorm(100), nrow = 10, ncol = 10) rownames(data_matrix) <- paste0(\"Gene\", 1:10) colnames(data_matrix) <- paste0(\"Sample\", 1:10)  # Basic usage result <- CorrelationHeatmap2(data_matrix, genes = rownames(data_matrix))  # Using metadata to separate by condition metadata <- data.frame(Sample = colnames(data_matrix),                        Condition = rep(c(\"A\", \"B\"), each = 5)) result <- CorrelationHeatmap2(data_matrix, metadata, genes = rownames(data_matrix), separate.by = \"Condition\") } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ExpressionHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"ExpressionHeatmap: Generate an expression heatmap with customizable sample annotations and separate legend positions — ExpressionHeatmap","title":"ExpressionHeatmap: Generate an expression heatmap with customizable sample annotations and separate legend positions — ExpressionHeatmap","text":"function creates heatmap Z-score scaled gene expression using ComplexHeatmap package. Genes displayed rows samples columns. color annotation bar added top based specified metadata columns. user can control position heatmap color scale (scale_position) annotation legend (legend_position) independently.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ExpressionHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ExpressionHeatmap: Generate an expression heatmap with customizable sample annotations and separate legend positions — ExpressionHeatmap","text":"","code":"ExpressionHeatmap(   data,   metadata = NULL,   genes,   annotate.by = NULL,   annotation_colors = NULL,   colorlist = list(low = \"blue\", mid = \"white\", high = \"red\"),   cluster_rows = TRUE,   cluster_columns = TRUE,   title = NULL,   titlesize = 20,   scale_position = c(\"right\", \"top\", \"bottom\"),   legend_position = c(\"top\", \"right\", \"bottom\"),   show_row_names = TRUE,   show_column_names = FALSE )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ExpressionHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ExpressionHeatmap: Generate an expression heatmap with customizable sample annotations and separate legend positions — ExpressionHeatmap","text":"data numeric expression matrix rows correspond genes columns samples. metadata data frame containing metadata samples. must contain column named \"Sample\" sample IDs matching column names data. genes character vector gene names include heatmap. annotate.character vector metadata column names used sample annotations (e.g., c(\"Condition\", \"Batch\")). provided, color bar added top. annotation_colors Optional. named list element corresponds annotation variable provides named vector mapping unique level color. provided, default Brewer palettes used. colorlist named list specifying colors heatmap (scaled expression) elements low, mid, high. Default list(low = \"blue\", mid = \"white\", high = \"red\"). cluster_rows Logical; whether cluster rows (default = TRUE). cluster_columns Logical; whether cluster columns (default = TRUE). FALSE, columns reordered based values annotate.. title string specifying main title heatmap. titlesize Numeric; font size heatmap title (default = 20). scale_position character string specifying position heatmap color scale. Options \"right\" (default), \"top\", \"bottom\". scale legend adopt vertical orientation right horizontal top bottom. legend_position character string specifying position annotation legend. Options \"top\" (default), \"right\", \"bottom\". show_row_names character string specifying whether row names (genes) displayed. show_column_names character string specifying whether column names (samples) displayed.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ExpressionHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ExpressionHeatmap: Generate an expression heatmap with customizable sample annotations and separate legend positions — ExpressionHeatmap","text":"list containing: data scaled expression matrix (Z-scores). plot generated ComplexHeatmap object.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ExpressionHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ExpressionHeatmap: Generate an expression heatmap with customizable sample annotations and separate legend positions — ExpressionHeatmap","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) data_matrix <- matrix(rnorm(100), nrow = 10, ncol = 10) rownames(data_matrix) <- paste0(\"Gene\", 1:10) colnames(data_matrix) <- paste0(\"Sample\", 1:10)  metadata <- data.frame(Sample = colnames(data_matrix),                        Condition = rep(c(\"A\", \"B\"), each = 5),                        Batch = rep(c(\"X\", \"Y\"), times = 5),                        stringsAsFactors = FALSE)  result <- ExpressionHeatmap(data_matrix, metadata, genes = rownames(data_matrix),                             annotate.by = c(\"Condition\", \"Batch\"),                             annotation_colors = list(                               Condition = c(A = \"red\", B = \"blue\"),                               Batch = c(X = \"green\", Y = \"purple\")                             ),                             cluster_columns = FALSE,                             title = \"Expression Heatmap\",                             scale_position = \"right\",                             legend_position = \"top\",                             titlesize = 20)  # To display the heatmap: result$plot } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/FPR_Simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"FPR Simulation Plot — FPR_Simulation","title":"FPR Simulation Plot — FPR_Simulation","text":"function simulates false positive rates (FPR) generating simulated gene signatures comparing observed effect size values (Cohen's d f) original signatures simulated signatures. effect size computed using three scoring methods (ssGSEA, logmedian, ranking), results visualized violin plots overlaid observed values.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/FPR_Simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FPR Simulation Plot — FPR_Simulation","text":"","code":"FPR_Simulation(   data,   metadata,   original_signatures,   Variable,   gene_list = NULL,   number_of_sims = 10,   title = NULL,   widthTitle = 30,   titlesize = 12,   pointSize = 2,   labsize = 10,   mode = c(\"none\", \"simple\", \"medium\", \"extensive\"),   ColorValues = NULL,   ncol = NULL,   nrow = NULL )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/FPR_Simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FPR Simulation Plot — FPR_Simulation","text":"data data frame matrix gene expression values (genes rows, samples columns). metadata data frame containing metadata samples (columns data). original_signatures named list gene signatures. element can either: vector gene names (unidirectional), data frame columns \"Gene\" \"Signal\" bidirectional signatures. Variable column metadata indicating variable interest grouping regression. can categorical numeric. gene_list character vector gene names simulated signatures generated sampling. Default genes data. number_of_sims Integer. Number simulated gene signatures generate per original signature. title Optional title overall plot. widthTitle Integer. Max width wrapping title text (default: 30). titlesize Numeric. Font size title text (default: 12). pointSize Numeric. Size points representing simulations (default: 2). labsize Numeric. Font size axis labels (default: 10). ColorValues Named vector colors plot points, typically Original Simulated. NULL, default colors used. ncol Integer. Number columns arranging signature plots grid layout. NULL, layout auto-calculated. nrow Integer. Number rows arranging signature plots grid layout. NULL, layout auto-calculated. modeA string specifying level detail contrasts. Options : \"simple\": Performs minimal number pairwise comparisons individual group levels (e.g., - B, - C). Default. \"medium\": Includes comparisons one group union groups (e.g., - (B + C + D)), enabling broader contrasts beyond simple pairs. \"extensive\": Allows possible algebraic combinations group levels (e.g., (+ B) - (C + D)), supporting flexible complex contrast definitions. \"none\": Comparing levels Variable (default)","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/FPR_Simulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FPR Simulation Plot — FPR_Simulation","text":"Invisibly returns combined ggplot object showing observed vs simulated effect sizes. One violin plot generated per signature contrast. Observed values highlighted compared simulated distribution. Significance (adjusted p-value ≤ 0.05) indicated point shape.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/FPR_Simulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FPR Simulation Plot — FPR_Simulation","text":"function supports categorical numeric variables: categorical variables, Cohen's d used contrasts defined mode parameter, mode!=none. numeric variables, Cohen's f used quantify associations linear modeling. original gene signature, number simulated signatures created sampling genes gene_list. simulated signature scored using three methods, effect size computed relative variable interest. resulting distributions shown violins, overlaid observed value original signature. red dashed line marks 95th percentile simulated distribution per method. function internally uses CohenD_allConditions() CohenF_allConditions() depending variable type.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/FPR_Simulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FPR Simulation Plot — FPR_Simulation","text":"","code":"if (FALSE) { # \\dontrun{ FPR_Simulation(   data = expression_data,   metadata = sample_metadata,   original_signatures = my_signatures,   Variable = \"condition\",   number_of_sims = 100,   title_for_plot = \"Simulation for FPR\" ) } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/GSEA_VariableAssociation.html","id":null,"dir":"Reference","previous_headings":"","what":"GSEA Variable Association — GSEA_VariableAssociation","title":"GSEA Variable Association — GSEA_VariableAssociation","text":"function assesses association gene expression (another molecular score) metadata variables using differential expression (DE) analysis Gene Set Enrichment Analysis (GSEA). generates possible contrasts categorical variables uses linear modeling continuous variables.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/GSEA_VariableAssociation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GSEA Variable Association — GSEA_VariableAssociation","text":"","code":"GSEA_VariableAssociation(   data,   metadata,   cols,   stat = NULL,   mode = c(\"simple\", \"medium\", \"extensive\"),   gene_set,   nonsignif_color = \"grey\",   signif_color = \"red\",   saturation_value = NULL,   sig_threshold = 0.05,   widthlabels = 18,   labsize = 10,   titlesize = 14,   pointSize = 5,   ignore_NAs = FALSE )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/GSEA_VariableAssociation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GSEA Variable Association — GSEA_VariableAssociation","text":"data matrix data frame containing gene expression data, rows represent genes columns represent samples. metadata data frame containing sample metadata least one column corresponding variables interest. cols character vector specifying metadata columns (variables) analyse. stat Optional. statistic use ranking genes GSEA. NULL, automatically determined based gene set: \"B\" gene sets known direction (vectors). \"t\" unidirectional bidirectional gene sets (data frames). provided, argument overrides automatic selection. gene_set named list defining gene sets GSEA. (Required) using unidirectional gene sets, provide list element vector gene names representing signature. using bidirectional gene sets, provide list element data frame: first column contain gene names. second column indicate expected direction enrichment (1 upregulated, -1 downregulated). nonsignif_color string specifying color middle adjusted p-value gradient. Default \"white\". Lower limit correspond value sig_threshold. signif_color string specifying color low end adjusted p-value gradient value chosen significance (sig_threshold). Default \"red\". saturation_value numeric value specifying lower limit adjusted p-value gradient, color correspond signif_color. Default results' minimum, unless value sig_threshold; case, 0.001. sig_threshold numeric value specifying threshold significance visualization plot. Default: 0.05. widthlabels integer controlling maximum width contrast labels text wrapping. Default: 18. labsize integer controlling axis text size plot. Default: 10. titlesize integer specifying plot title size. Default: 14. pointSize Numeric. size points lollipop plot (default 5). ignore_NAs Boolean (default: FALSE). Whether ignore NAs metadata fitting linear model. TRUE, rows NAs removed analysis, leading loss data fitted model. modeA string specifying level detail contrasts. Options : \"simple\": Performs minimal number pairwise comparisons individual group levels (e.g., - B, - C). Default. \"medium\": Includes comparisons one group union groups (e.g., - (B + C + D)), enabling broader contrasts beyond simple pairs. \"extensive\": Allows possible algebraic combinations group levels (e.g., (+ B) - (C + D)), supporting flexible complex contrast definitions.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/GSEA_VariableAssociation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GSEA Variable Association — GSEA_VariableAssociation","text":"list two elements: data: data frame containing GSEA results, including normalized enrichment scores (NES), adjusted p-values, contrasts. plot: ggplot2 object visualizing GSEA results lollipop plot.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/GSEA_VariableAssociation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GSEA Variable Association — GSEA_VariableAssociation","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage with random data set.seed(42)  # For reproducibility  # Create random gene expression data data <- matrix(rnorm(1000), ncol = 10)  # Assign gene identifiers as row names (e.g., Gene1, Gene2, ...) rownames(data) <- paste0(\"Gene\", 1:nrow(data))  # Create metadata (e.g., group variable) metadata <- data.frame(group = rep(c(\"A\", \"B\"), each = 5))  # Define a gene set gene_set <- list(SampleSet = c(\"Gene1\", \"Gene2\", \"Gene3\"))  # Call the GSEA_VariableAssociation function results <- GSEA_VariableAssociation(data, metadata, cols = \"group\", gene_set = gene_set)  # View results print(results$data) print(results$plot) } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/Heatmap_Cohen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Heatmaps for Cohen\\'s d Effect Sizes using ggplot2 — Heatmap_Cohen","title":"Generate Heatmaps for Cohen\\'s d Effect Sizes using ggplot2 — Heatmap_Cohen","text":"function computes Cohen\\'s d effect sizes corresponding p-values multiple gene signatures produces individual heatmaps. heatmap displays cell text showing Cohen\\'s d value along p-value. heatmaps arranged grid layout.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/Heatmap_Cohen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Heatmaps for Cohen\\'s d Effect Sizes using ggplot2 — Heatmap_Cohen","text":"","code":"Heatmap_Cohen(   cohenlist,   nrow = NULL,   ncol = NULL,   limits = NULL,   widthTitle = 22,   titlesize = 12,   ColorValues = NULL,   title = NULL )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/Heatmap_Cohen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Heatmaps for Cohen\\'s d Effect Sizes using ggplot2 — Heatmap_Cohen","text":"cohenlist named list element corresponds gene signature. Output CohenD_allConditions. signature element list three components: CohenD data frame rows methods columns group contrasts (formatted \\\"Group1:Group2\\\"), containing computed Cohen\\'s d effect sizes. PValue data frame structure CohenD containing corresponding p-values. padj data frame structure PValue containing corresponding p-values corrected using BH method, signatures contrasts, method. nrow Optional. integer specifying number rows heatmap grid. NULL, number rows computed automatically. ncol Optional. integer specifying number columns heatmap grid. NULL, number columns computed automatically. limits Optional. numeric vector length 2 specifying color scale limits (e.g., c(min, max)). NULL, limits determined data. widthTitle integer specifying width used wrapping gene set signature names heatmap titles. Default 22. titlesize integer specifying text size heatmap titles. Default 12. ColorValues character vector specifying colors gradient fill heatmaps. Default c(\"#F9F4AE\", \"#B44141\"). title Title grid plots.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/Heatmap_Cohen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Heatmaps for Cohen\\'s d Effect Sizes using ggplot2 — Heatmap_Cohen","text":"list two elements: plt combined heatmap arranged grid using ggpubr::ggarrange. data list containing Cohen\\'s d effect sizes p-values gene signature, computed CohenD_allConditions.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/Heatmap_Cohen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Heatmaps for Cohen\\'s d Effect Sizes using ggplot2 — Heatmap_Cohen","text":"function first calculates Cohen\\'s d effect sizes corresponding p-values gene signature using CohenD_allConditions (assumed defined elsewhere package). resulting matrices converted long format cell heatmap can display Cohen\\'s d value associated p-value (formatted Cohen\\'s d (p-value)). heatmaps adjusted display axis text ticks left-column bottom row, combined grid layout. neither nrow ncol specified, layout automatically determined best approximate square grid.","code":""},{"path":[]},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/IndividualGenes_Violins.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Violin Plots for Individual Genes — IndividualGenes_Violins","title":"Generate Violin Plots for Individual Genes — IndividualGenes_Violins","text":"function creates violin plots gene expression data jittered points optional faceting. allows visualization individual gene expression distributions across sample groups.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/IndividualGenes_Violins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Violin Plots for Individual Genes — IndividualGenes_Violins","text":"","code":"IndividualGenes_Violins(   data,   metadata = NULL,   genes,   GroupingVariable,   plot = TRUE,   ncol = NULL,   nrow = NULL,   divide = NULL,   invert_divide = FALSE,   ColorValues = NULL,   pointSize = 2,   ColorVariable = NULL,   title = NULL,   widthTitle = 16,   y_limits = NULL,   legend_nrow = NULL,   xlab = NULL,   colorlab = NULL )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/IndividualGenes_Violins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Violin Plots for Individual Genes — IndividualGenes_Violins","text":"data data frame containing gene expression values row names gene names column names sample IDs. (Required) metadata optional data frame containing sample metadata. first column must match sample IDs data. (Optional) genes character vector gene names plotted.  (Required) GroupingVariable character string specifying column metadata used grouping samples x-axis. (Required) plot logical value indicating whether print plot. FALSE, output list returned. Default TRUE. (Optional) ncol optional numeric value specifying number columns facet grid. provided, computed automatically. applicable divide NULL. (Optional) nrow optional numeric value specifying number rows facet grid. provided, computed automatically. applicable divide NULL. (Optional) divide optional character string specifying column metadata used facetting, besides faceting genes. (Optional) invert_divide logical value indicating whether invert facet layout, divide used. Default FALSE, corresponding genes rows. (Optional) ColorValues optional named vector mapping unique values ColorVariable specific colors. NULL, default Brewer palette (\"Paired\") used. (Optional) pointSize numeric value specifying size points plot. Default 2. (Optional) ColorVariable character string specifying metadata column used coloring points. Default NULL. (Optional) title character string specifying title plot. Default NULL. (Optional) widthTitle numeric value specifying maximum width title inserting line breaks. (Optional) y_limits numeric vector length 2 specifying limits y-axis. NULL (default), y-axis adjusted automatically. (Optional) legend_nrow numeric value specifying number rows legend. Default NULL. (Optional) xlab character string specifying x-axis label. NULL, defaults GroupingVariable. (Optional) colorlab character string specifying legend title colors. Default empty string. (Optional)","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/IndividualGenes_Violins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Violin Plots for Individual Genes — IndividualGenes_Violins","text":"list containing: plot ggplot2 object representing facetted violin plots. data data frame used plotting, including transformed expression values (log2) metadata.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/IndividualGenes_Violins.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Violin Plots for Individual Genes — IndividualGenes_Violins","text":"function processes gene expression data, filters specified genes, transforms expression values using log2(). violin plot jittered points generated using ggplot2. median summary added crossbar. divide provided, facets created using ggh4x::facet_grid2(). Color customization available via ColorVariable ColorValues.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/IndividualGenes_Violins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Violin Plots for Individual Genes — IndividualGenes_Violins","text":"","code":"# Example dataset data <- data.frame(   A = c(10, 20, 30),   B = c(5, 15, 25),   C = c(2, 12, 22) ) rownames(data) <- c(\"Gene1\", \"Gene2\", \"Gene3\")  metadata <- data.frame(   sample = c(\"A\", \"B\", \"C\"),   Group = c(\"Control\", \"Treatment\", \"Control\") )  genes <- c(\"Gene1\", \"Gene2\")  IndividualGenes_Violins(data, metadata, genes, \"Group\") #> Using gene as id variables #> Warning: Groups with fewer than two datapoints have been dropped. #> ℹ Set `drop = FALSE` to consider such groups for position adjustment purposes. #> Warning: Groups with fewer than two datapoints have been dropped. #> ℹ Set `drop = FALSE` to consider such groups for position adjustment purposes."},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/PlotScores.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot gene signature scores using various methods. — PlotScores","title":"Plot gene signature scores using various methods. — PlotScores","text":"Computes visualizes gene signature scores using one methods, returning plots scatter plots, violin plots, heatmaps, volcano plots depending inputs.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/PlotScores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot gene signature scores using various methods. — PlotScores","text":"","code":"PlotScores(   data,   metadata,   gene_sets,   method = c(\"ssGSEA\", \"logmedian\", \"ranking\", \"all\"),   ColorVariable = NULL,   Variable = NULL,   ColorValues = NULL,   ConnectGroups = FALSE,   ncol = NULL,   nrow = NULL,   title = NULL,   widthTitle = 20,   titlesize = 12,   limits = NULL,   legend_nrow = NULL,   pointSize = 4,   xlab = NULL,   labsize = 10,   compute_cohen = TRUE,   cond_cohend = NULL,   pvalcalc = FALSE,   mode = c(\"simple\", \"medium\", \"extensive\"),   widthlegend = 22,   sig_threshold = 0.05,   cohen_threshold = 0.5,   colorPalette = \"Set3\",   cor = c(\"pearson\", \"spearman\", \"kendall\") )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/PlotScores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot gene signature scores using various methods. — PlotScores","text":"data data frame normalized (non-transformed) counts row gene column sample. Row names contain gene names, column names contain sample identifiers. (Required) metadata data frame sample-level attributes. row corresponds sample, first column containing sample IDs match colnames(data). Required method = \"\" metadata-derived groupings colors used. gene_sets named list gene sets score. unidirectional gene sets: list character vectors. bidirectional gene sets: list data frames two columns: gene names direction (1 = , -1 = ). (Required) method Scoring method use. One \"ssGSEA\", \"logmedian\", \"ranking\", \"\" (default = \"logmedian\"). \"\" triggers full analysis returning heatmap volcano plots. values return single-score plots depending Variable type. ColorVariable Name metadata column color points . Used single-method mode (\"ssGSEA\", etc.). Ignored \"\" mode. Variable Metadata column define groups numeric comparisons. Required method = \"\" (used compute compare effect sizes). NULL method != \"\", density plots signature scores across samples shown (grouping comparison). ColorValues Optional. named vector list colors used control coloring plot elements across different methods variable types. Behavior depends combination method Variable: method != \"\": Variable NULL: Used density plots; single color applied (default: \"#ECBD78\" ColorValues specified). Variable categorical: named vector map level Variable (ColorVariable) specific color. Overrides palette specified colorPalette. Variable numeric: single color applied points scatter plot (default: \"#5264B6\"). method == \"\": ColorValues can named list two elements: heatmap: vector two colors used diverging scale heatmap effect sizes (default: c(\"#F9F4AE\", \"#B44141\")). volcano: named vector colors used labeling grouping gene signatures (e.g., volcano plot). provided, defaults used components. cases, ColorValues takes precedence default colorPalette setting specified. ConnectGroups Logical. TRUE, connects points sample ID across conditions (used categorical variables method != \"\"). ncol Number columns facet layout (used heatmaps score plots). nrow Number rows facet layout (used heatmaps score plots). title Plot title (optional). widthTitle Width allocated title (affects alignment). titlesize Font size plot title. limits Y-axis limits (numeric vector length 2). legend_nrow Number rows plot legend (used single-method plots). pointSize Numeric. Size points score plots (violin scatter), used plotting individual sample scores categorical numeric variables, including method = \"\". xlab Label x-axis (optional; defaults Variable). labsize Font size axis facet labels. compute_cohen Logical. Whether compute Cohen's effect sizes score plots (method != \"\"). applies method != \"\"; ignored otherwise. variable categorical cond_cohend specified, computes Cohen's d specified comparison. variable categorical cond_cohend specified, computes: Cohen's d exactly two groups. Cohen's f two groups. variable numeric, computes Cohen's f regardless cond_cohend. cond_cohend Optional. List length 2 two groups used compute effect size. values entry levels Variable (used compute_cohen = TRUE`). pvalcalc Logical. TRUE, computes p-values groups. mode string specifying contrast mode method = \"\". Determines complexity breadth comparisons performed group levels. Options : \"simple\": Performs minimal number pairwise comparisons individual group levels (e.g., - B, - C). Default. \"medium\": Includes comparisons one group union groups (e.g., - (B + C + D)), enabling broader contrasts beyond simple pairs. \"extensive\": Allows possible algebraic combinations group levels (e.g., (+ B) - (C + D)), supporting flexible complex contrast definitions. widthlegend Width legend volcano plots (used method = \"\") violin score plots. sig_threshold P-value cutoff shown guide line volcano plots. applies method = \"\". cohen_threshold Effect size threshold shown guide line volcano plots. Used method = \"\". colorPalette Name RColorBrewer palette used assign colors plots. Applies methods. Default \"Set3\". ColorValues provided, overrides palette. Variable NULL method != \"\" (.e., density plots), default color \"#ECBD78\" used. method = \"\" (.e., heatmaps volcano plots), default diverging color scale used: c(\"#F9F4AE\", \"#B44141\"), unless ColorValues manually specified. cor Correlation method numeric variables. One \"pearson\" (default), \"spearman\", \"kendall\". applies variable numeric method != \"\".","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/PlotScores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot gene signature scores using various methods. — PlotScores","text":"Depending method: method = \"\": returns list heatmap volcano ggplot objects. method single method: returns single ggplot object (scatter violin plot depending variable type).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/PlotScores.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot gene signature scores using various methods. — PlotScores","text":"Behavior Based method: \"\": Requires metadata Variable. Computes scores using available methods returns: heatmap Cohen’s effect sizes. volcano plot showing effect size vs p-value across gene signatures. Uses additional parameters: mode: defines contrasts groups constructed. sig_threshold cohend_threshold: add guide dashed lines volcano plot (affect point coloring). widthlegend: controls width volcano plot legend. pointSize: controls dot size signature points volcano plot. ColorValues can named list: heatmap: two-color gradient effect sizes (default: c(\"#F9F4AE\", \"#B44141\")). signatures: named vector colors gene signatures volcano plot (default color palette \"Set3\"). \"ssGSEA\", \"logmedian\", \"ranking\": type Variable determines plot: categorical: produces violin plots optional group comparisons. numeric: produces scatter plots correlation. Variable NULL: produces density plots signature across samples. Additional arguments: ColorVariable ColorValues: control coloring points violins. colorPalette: default palette (overridden ColorValues present). ConnectGroups: links samples ID (categorical Variable ). cor: specifies correlation method numeric Variable. pvalcalc: enables group-wise p-value calculations (categorical ). compute_cohen: calculates effect sizes applicable. cond_cohend: focuses Cohen’s d calculation specific comparison. Behavior Based Variable Type: Variable numeric: Outputs scatter plots (single-method mode). Computes correlation (cor). Ignores compute_cohen, cond_cohend, pvalcalc. Color uniform (default: \"#5264B6\") unless overridden via ColorValues. Cohen’s f effect size estimation (compute_cohen = TRUE) significance pvalcalc TRUE. Variable categorical: Outputs violin plots (single-method mode). Supports: p-value comparisons (pvalcalc = TRUE), optional connection lines (ConnectGroups = TRUE), Cohen’s effect size estimation (compute_cohen = TRUE) significance (pvalcalc TRUE): cond_cohend specified, computes Cohen's d comparison. specified: Computes Cohen’s d 2 groups. Computes Cohen’s f >2 groups. Colors matched factor levels using ColorValues colorPalette. Variable NULL method != \"\": Produces density plots signature scores. Uses single fill color (\"#ECBD78\" default ColorValues).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/PlotScores_Categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Gene Set Scores by Group or Continuous Variable — PlotScores_Categorical","title":"Plot Gene Set Scores by Group or Continuous Variable — PlotScores_Categorical","text":"function computes visualizes gene set enrichment scores using various methods, optionally comparing across groups numeric variables. supports categorical numeric comparisons, statistical testing, Cohen's d effect sizes, visualizations heatmaps volcano plots.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/PlotScores_Categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Gene Set Scores by Group or Continuous Variable — PlotScores_Categorical","text":"","code":"PlotScores_Categorical(   data,   metadata,   gene_sets,   method = c(\"ssGSEA\", \"logmedian\", \"ranking\"),   ColorVariable = NULL,   GroupingVariable = NULL,   ColorValues = NULL,   ConnectGroups = FALSE,   ncol = NULL,   nrow = NULL,   title = NULL,   widthTitle = 10,   titlesize = 12,   limits = NULL,   legend_nrow = NULL,   pointSize = 2,   xlab = NULL,   labsize = 10,   compute_cohen = TRUE,   cond_cohend = NULL,   pvalcalc = FALSE,   mode = c(\"simple\", \"medium\", \"extensive\"),   widthlegend = 22,   cohen_threshold = 0.6,   colorPalette = \"Set3\" )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/PlotScores_Categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Gene Set Scores by Group or Continuous Variable — PlotScores_Categorical","text":"data data frame normalized (non-transformed) counts row gene column sample. Row names contain gene names, column names contain sample identifiers. (Required) metadata data frame describing attributes sample, row corresponds sample column attribute. first column contain sample identifiers (.e., column names data). (Required method = \"\") gene_sets Gene set input. (Required) Unidirectional gene sets: Provide named list element vector gene names representing gene signature. Bidirectional gene sets: Provide named list element data frame two columns: first column contains gene names. second column indicates expected direction enrichment (1 upregulated genes, -1 downregulated genes). method character string indicating scoring method use. Options \"ssGSEA\", \"logmedian\" \"ranking\". Defaults \"logmedian\". ColorVariable Optional. Name metadata column use point color plots. GroupingVariable Optional. Name metadata column use group comparison. ColorValues Optional. Named vector colors use group ColorVariable GroupingVariable. ConnectGroups Logical. TRUE, connects points sample across conditions. ncol Number columns facet layout plot. nrow Number rows facet layout plot. title Optional. Main title plot. widthTitle Numeric. Width title area (alignment purposes). titlesize Numeric. Font size title text. limits Optional numeric vector length 2 specifying y-axis limits. legend_nrow Optional. Number rows plot legend. pointSize Numeric. Size points plots. xlab Optional. Label x-axis. labsize Numeric. Font size axis facet labels. compute_cohen Logical. TRUE, computes Cohen's d effect sizes groups. cond_cohend Optional. Specify condition comparison subset calculating Cohen’s d. pvalcalc Logical. TRUE, computes p-values group comparisons. mode Character string indicating comparison complexity. Options: \"simple\", \"medium\", \"extensive\". widthlegend Numeric. Width legend area volcano plots. cohen_threshold Numeric. Cohen's d threshold highlight effect size volcano plots (default = 0.6). colorPalette Character. Name RColorBrewer palette coloring (default = \"Set3\").","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/PlotScores_Categorical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Gene Set Scores by Group or Continuous Variable — PlotScores_Categorical","text":"Four methods available: ssGSEA: Uses single-sample Gene Set Enrichment Analysis (ssGSEA) method compute enrichment score signature sample using adaptation gsva() function GSVA package. logmedian: Computes score sum normalized (log2-median-centered) expression values signature genes divided number genes signature. ranking: Computes gene signature scores sample ranking expression signature genes dataset normalizing score based total number genes. : Computes gene signature scores using three methods (ssGSEA, logmedian, ranking). Returns heatmap summarizing Cohen's d metric combinations variables interest. Depending method type variable (categorical, numeric, NULL), function produces different plots: method = \"\" variable categorical, heatmap Cohen's d F statistics volcano plot showing contrasts groups variable produced. method = \"\" variable numeric, heatmap Cohen's f volcano plot produced. method != \"\" variable categorical, violin plot signature generated. method != \"\" variable NULL, density plot score distribution displayed. method != \"\" variable numeric, scatter plot created show relationship scores numeric variable. method = \"\" variable categorical, function returns heatmap Cohen's d F statistics volcano plot showing contrasts groups variable. method = \"\" variable numeric, heatmap Cohen's f volcano plot produced. method != \"\" variable categorical, violin plot signature displayed. method != \"\" variable NULL, density plot score distribution displayed. method != \"\" variable numeric, scatter plot generated show relationship scores numeric variable.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/PlotScores_Numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Gene Signature Scores with Continuous Variables — PlotScores_Numeric","title":"Plot Gene Signature Scores with Continuous Variables — PlotScores_Numeric","text":"function visualizes gene signature scores using scatter plots regression lines across continuous metadata variable. Signature scores computed per sample using one three methods: \"ssGSEA\", \"logmedian\", \"ranking\". Optionally, effect size (Cohen's f) p-value association signature score continuous variable can computed displayed.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/PlotScores_Numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Gene Signature Scores with Continuous Variables — PlotScores_Numeric","text":"","code":"PlotScores_Numeric(   data,   metadata,   gene_sets,   method = c(\"ssGSEA\", \"logmedian\", \"ranking\"),   Variable = NULL,   ColorValues = NULL,   ncol = NULL,   nrow = NULL,   title = NULL,   widthTitle = 10,   titlesize = 12,   limits = NULL,   pointSize = 2,   xlab = NULL,   labsize = 10,   compute_cohen = TRUE,   pvalcalc = FALSE,   colorPalette = \"Set3\",   cor = c(\"pearson\", \"spearman\", \"kendall\") )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/PlotScores_Numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Gene Signature Scores with Continuous Variables — PlotScores_Numeric","text":"data data frame normalized (non-transformed) gene expression counts. Rows genes, columns samples. Row names gene names, column names match sample identifiers metadata. metadata data frame row corresponds sample contains sample-level attributes (e.g., clinical experimental metadata). Must include column matching sample IDs data. gene_sets list gene sets (signatures). element either character vector gene names data frame gene names enrichment direction (1 upregulated, -1 downregulated). method Scoring method use. One \"ssGSEA\", \"logmedian\", \"ranking\". Default \"logmedian\". Variable Name continuous variable metadata use x-axis scoring association. ColorValues (Optional) named vector defining color plotted points. NULL, defaults preset color. ncol, nrow Number columns rows facet grid layout. NULL, computed automatically. title Optional string overall title plot grid. widthTitle Maximum character width titles inserting line breaks. Default 10. titlesize Numeric value font size plot titles. Default 12. limits Optional numeric vector length 2 define y-axis limits. pointSize Size plotted points. Default 2. xlab Optional label x-axis. NULL, defaults name Variable. labsize Font size axis labels. Default 10. compute_cohen Logical. TRUE (default), computes Cohen's f effect size association signature score continuous variable. pvalcalc Logical. TRUE, includes p-value plot subtitle. Default FALSE. colorPalette Name RColorBrewer palette coloring. Default \"Set3\". Currently unused kept consistency. cor Character string indicating correlation method used ggpubr::stat_cor(). Options \"pearson\" (default), \"kendall\", \"spearman\".","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/PlotScores_Numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Gene Signature Scores with Continuous Variables — PlotScores_Numeric","text":"ggplot2 object multi-plot figure showing scatter plots gene signature, linear regression lines optional statistical annotations.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/PlotScores_Numeric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Gene Signature Scores with Continuous Variables — PlotScores_Numeric","text":"gene signature, function: Computes signature score per sample using selected method. Plots score continuous metadata variable (Variable). Adds regression line optionally computes displays Cohen’s f effect size p-value. Returns faceted grid ggplots, arranged ncol nrow. version function specifically tailored use continuous variables.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROCAUC_Scores_Calculate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute ROC Curves and AUC Values for Gene Signature Scores — ROCAUC_Scores_Calculate","title":"Compute ROC Curves and AUC Values for Gene Signature Scores — ROCAUC_Scores_Calculate","text":"function calculates Receiver Operating Characteristic (ROC) curves Area Curve (AUC) values gene signature scores across different contrasts given categorical variable.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROCAUC_Scores_Calculate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute ROC Curves and AUC Values for Gene Signature Scores — ROCAUC_Scores_Calculate","text":"","code":"ROCAUC_Scores_Calculate(   data,   metadata,   gene_sets,   method = c(\"logmedian\", \"ssGSEA\", \"ranking\", \"all\"),   variable,   mode = c(\"simple\", \"medium\", \"extensive\") )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROCAUC_Scores_Calculate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute ROC Curves and AUC Values for Gene Signature Scores — ROCAUC_Scores_Calculate","text":"data matrix data frame gene expression data (genes rows, samples columns). metadata data frame containing sample metadata, including grouping variable. gene_sets named list gene sets, entry character vector gene names. method character string specifying score calculation method. Options: \"logmedian\", \"ssGSEA\", \"ranking\", \"\". variable character string specifying categorical variable group comparisons.#' mode string specifying level detail contrasts. Options : \"simple\": Pairwise comparisons (e.g., - B). \"medium\": Pairwise comparisons plus comparisons mean groups. \"extensive\": possible groupwise contrasts, ensuring balance number terms side.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROCAUC_Scores_Calculate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute ROC Curves and AUC Values for Gene Signature Scores — ROCAUC_Scores_Calculate","text":"named list containing ROC curve data AUC values method, signature, contrast.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROC_Scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ROC Curves for Gene Signature Scores — ROC_Scores","title":"Plot ROC Curves for Gene Signature Scores — ROC_Scores","text":"function generates ROC curve plots different gene signatures across multiple scoring methods.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROC_Scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ROC Curves for Gene Signature Scores — ROC_Scores","text":"","code":"ROC_Scores(   data,   metadata,   gene_sets,   method = c(\"logmedian\", \"ssGSEA\", \"ranking\", \"all\"),   variable,   colors = c(logmedian = \"#3E5587\", ssGSEA = \"#B65285\", ranking = \"#B68C52\"),   grid = TRUE,   spacing_annotation = 0.3,   ncol = NULL,   nrow = NULL,   mode = c(\"simple\", \"medium\", \"extensive\"),   widthTitle = 18,   title = NULL,   titlesize = 12 )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROC_Scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ROC Curves for Gene Signature Scores — ROC_Scores","text":"data matrix data frame gene expression data. metadata data frame containing sample metadata. gene_sets named list gene sets. method character string specifying scoring method(s) (\"logmedian\", \"ssGSEA\", \"ranking\", \"\"). variable character string specifying categorical variable group comparisons. colors named vector specifying colors method. one color allowed, method != \"\". Default colors c(logmedian = \"#3E5587\", ssGSEA = \"#B65285\", ranking = \"#B68C52\"). grid Logical; TRUE, arranges plots grid. spacing_annotation numeric value specifying spacing labels AUC values. Default 0.3. ncol Optional numeric value specifying number columns grid layout combined plots. NULL, many columns contrasts. number 1, near-square grid computed. nrow Optional numeric value specifying number rows grid layout. NULL, many columns gene sets. number 1, near-square grid computed. widthTitle Optional integer specifying maximum width title inserting line breaks. Titles break _, -, : possible, exact width character found. Default 18. title Title grid plots. titlesize integer specifying text size heatmap titles. Default 12. modeA string specifying level detail contrasts. Options : \"simple\": Performs minimal number pairwise comparisons individual group levels (e.g., - B, - C). Default. \"medium\": Includes comparisons one group union groups (e.g., - (B + C + D)), enabling broader contrasts beyond simple pairs. \"extensive\": Allows possible algebraic combinations group levels (e.g., (+ B) - (C + D)), supporting flexible complex contrast definitions.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROC_Scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ROC Curves for Gene Signature Scores — ROC_Scores","text":"ggplot2 ggarrange object containing ROC curve plots.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROC_Scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ROC Curves for Gene Signature Scores — ROC_Scores","text":"","code":"# Example data data <- as.data.frame(abs(matrix(rnorm(1000), ncol = 10))) rownames(data) <- paste0(\"Gene\", 1:100)  # Name columns as Gene1, Gene2, ..., Gene10 colnames(data) <- paste0(\"Sample\", 1:10)  # Name rows as Sample1, Sample2, ..., Sample100  # Metadata with sample ID and condition metadata <- data.frame(   SampleID = colnames(data),  # Sample ID matches the colnames of the data   Condition = rep(c(\"A\", \"B\"), each = 5)  # Two conditions (A and B) )  # Example gene set gene_sets <- list(Signature1 = c(\"Gene1\", \"Gene2\", \"Gene3\"))  # Example gene set  # Call ROC_Scores function ROC_Scores(data, metadata, gene_sets, method = \"ssGSEA\", variable = \"Condition\") #> Considering unidirectional gene signature mode for signature Signature1 #> No id variables; using all as measure variables"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROCandAUCplot.html","id":null,"dir":"Reference","previous_headings":"","what":"ROC and AUC Plot Function — ROCandAUCplot","title":"ROC and AUC Plot Function — ROCandAUCplot","text":"function computes ROC curves AUC values gene based gene expression data sample metadata. can generate ROC plots, AUC heatmap / barplot, arranged side‐‐side.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROCandAUCplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ROC and AUC Plot Function — ROCandAUCplot","text":"","code":"ROCandAUCplot(   data,   metadata,   genes = NULL,   condition_var,   class,   group_var = NULL,   plot_type = \"roc\",   title = NULL,   titlesize = 14,   roc_params = list(),   auc_params = list(),   commomplot_params = list() )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROCandAUCplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ROC and AUC Plot Function — ROCandAUCplot","text":"data data frame matrix containing gene expression data, genes rows samples columns. metadata data frame containing sample metadata. first column contain sample identifiers match column names data. genes character vector specifying genes plot. NULL (default), genes data used. warning issued 30 genes selected. condition_var character string specifying column name metadata representing condition interest. (Mandatory; default.) class character string vector specifying positive class label condition. (Mandatory; default.) group_var optional character string specifying column name metadata used grouping samples (e.g., cell types). provided (NULL), samples treated single group. categorical variable. plot_type character string indicating plot(s) generate. Accepted values \"roc\" (ROC curves), \"auc\" (AUC heatmap/barplot), \"\" (arranged side--side). Default \"roc\". title optional character string specifying main title plot. titlesize numeric value specifying size title. Default 14. roc_params list additional parameters customizing ROC plot. Possible elements include: nrow integer specifying number rows ROC plot grid. NULL (default), calculated automatically. ncol integer specifying number columns ROC plot grid. NULL (default), calculated automatically. colors named vector colors different groups. NULL (default), default color palette generated. auc_params list additional parameters customizing AUC heatmap AUC barplot. Possible elements include: cluster_rows Logical; TRUE (default), rows clustered. cluster_columns Logical; TRUE (default), columns clustered. colors group_var used, vector length 2 colors used minimum maximum values color scale. Defaults c(\"#FFFFFF\", \"#21975C\"). group_var NULL, single color fill barplot. NULL, defaults \"#3B415B\". vector provided, first color used. limits numeric vector length 2 specifying minimum maximum values color scale. provided, defaults c(0.5, 1). name character string legend title color scale. Default \"AUC\". row_names_gp Optional graphical parameters row names (passed ComplexHeatmap). column_names_gp Optional graphical parameters column names (passed ComplexHeatmap). commomplot_params list parameters customizing layout combined plot plot_type = \"\". Possible elements include: widths numeric vector specifying relative widths ROC heatmap panels. heights numeric vector specifying relative heights panels.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROCandAUCplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ROC and AUC Plot Function — ROCandAUCplot","text":"Invisibly returns list containing: roc_plot ggplot2 object ROC curves (generated). heatmap ComplexHeatmap object (generated). combined combined grid arrangement (plot_type = \"\"). auc_values data frame calculated AUC values.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROCandAUCplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ROC and AUC Plot Function — ROCandAUCplot","text":"function processes gene expression data metadata compute ROC curves AUC values gene. Depending value plot_type, produces ROC plots (using ggplot2), AUC heatmap (using ComplexHeatmap) AUC barplot (group_var NULL), arranged side--side (using gridExtra).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ROCandAUCplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ROC and AUC Plot Function — ROCandAUCplot","text":"","code":"if (FALSE) { # \\dontrun{   # Example: Generate both ROC plots and heatmap with custom parameters   result <- ROCandAUCplot(data = myData,                           metadata = myMetadata,                           genes = c(\"Gene1\", \"Gene2\", \"Gene3\"),                           condition_var = \"Genotype\",                           class = \"Mutant\",                           group_var = \"CellType\",                           plot_type = \"all\",                           title = \"My Custom Title\",                           roc_params = list(ncol = 3),                           auc_params= list(limits = c(0.4, 1)),                           commomplot_params = list(widths = c(1, 1))) } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/Score_VariableAssociation.html","id":null,"dir":"Reference","previous_headings":"","what":"Score Variable Association — Score_VariableAssociation","title":"Score Variable Association — Score_VariableAssociation","text":"function evaluates association gene expression scores metadata variables. uses linear modeling get Cohen's F, contrast-based comparisons categorical variables compute Cohen's D. function generates plots summarizing results.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/Score_VariableAssociation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score Variable Association — Score_VariableAssociation","text":"","code":"Score_VariableAssociation(   data,   metadata,   cols,   method = c(\"logmedian\", \"ssGSEA\", \"ranking\"),   gene_set,   mode = c(\"simple\", \"medium\", \"extensive\"),   nonsignif_color = \"grey\",   signif_color = \"red\",   saturation_value = NULL,   sig_threshold = 0.05,   widthlabels = 18,   labsize = 10,   title = NULL,   titlesize = 14,   pointSize = 5,   discrete_colors = NULL,   continuous_color = \"#8C6D03\",   color_palette = \"Set2\",   printplt = TRUE )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/Score_VariableAssociation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score Variable Association — Score_VariableAssociation","text":"data data frame matrix containing gene expression data. metadata data frame containing sample metadata least one column corresponding variables interest. cols character vector specifying metadata columns analyse. method character string specifying scoring method (\"logmedian\", \"ssGSEA\", \"ranking\"). gene_set named list containing one gene set scoring. mode character string specifying contrast generation method (\"simple\", \"medium\", \"extensive\"). Four methods available: ssGSEA: Uses single-sample Gene Set Enrichment Analysis (ssGSEA) method compute enrichment score signature sample using adaptation gsva() function GSVA package. logmedian: Computes score sum normalized (log2-median-centered) expression values signature genes divided number genes signature. ranking: Computes gene signature scores sample ranking expression signature genes dataset normalizing score based total number genes. nonsignif_color string specifying color non-significant results. Default: \"grey\". signif_color string specifying color significant results. Default: \"red\". saturation_value numeric value color saturation threshold. Default: NULL (auto-determined). sig_threshold numeric value specifying significance threshold. Default: 0.05. widthlabels integer controlling contrast label wrapping. Default: 18. labsize integer controlling axis text size. Default: 10. title string specifying plot title. Default: NULL. titlesize integer specifying title size. Default: 14. pointSize numeric value point size plots. Default: 5. discrete_colors named list mapping categorical variable levels colors. element named vector names correspond factor levels. Default: NULL. continuous_color string specifying color continuous variables. Default: \"#8C6D03\". color_palette string specifying color palette discrete variables. Default: \"Set2\". printplt Boolean specifying plot printed. Default: TRUE.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/Score_VariableAssociation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score Variable Association — Score_VariableAssociation","text":"list : Overall: Data frame effect sizes p-values contrasted phenotypic variable. Contrasts: Data frame Cohen’s d adjusted p-values contrasts levels categorical variables, resolution contrasts determined mode parameter. plot: combined visualization three main panels: (1) lollipop plots Cohen’s f variable interest, (2) distribution plots score variable (density scatter depending variable type), (3, applicable) lollipop plots Cohen’s d contrasts categorical variables. plot_contrasts: Lollipop plots Cohen’s d effect sizes contrasts levels non numerical variables (applicable), colored adjusted p-value (BH). plot_overall: Lollipop plot showing Cohen’s f effect sizes variable, colored p-value. plot_distributions: List density scatter plots score across variable levels, depending variable type.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/Score_VariableAssociation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score Variable Association — Score_VariableAssociation","text":"","code":"data <- as.data.frame(abs(matrix(rnorm(1000), ncol = 10))) rownames(data) <- paste0(\"Gene\", 1:100)  # Name columns as Gene1, Gene2, ..., Gene10 colnames(data) <- paste0(\"Sample\", 1:10)  # Name rows as Sample1, Sample2, ..., Sample100  metadata <- data.frame(   sample = colnames(data),  # Sample ID matches the rownames of the data   Condition = rep(c(\"A\", \"B\"), each = 50)  # Two conditions (A and B) ) gene_set <- list(SampleSet = c(\"Gene1\", \"Gene2\", \"Gene3\")) results <- Score_VariableAssociation(data, metadata, cols = \"Condition\", gene_set = gene_set) #> Considering unidirectional gene signature mode for signature SampleSet #> Warning: no non-missing arguments to min; returning Inf  print(results$plot)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/VariableAssociation.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Statistical Associations Between Variables and a Target Score — VariableAssociation","title":"Visualize Statistical Associations Between Variables and a Target Score — VariableAssociation","text":"Creates visual representations statistical relationships predictor variables target variable (target_var). function generates scatter plots regression lines numeric variables density plots categorical variables, incorporating statistical test results compute_stat_tests().","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/VariableAssociation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Statistical Associations Between Variables and a Target Score — VariableAssociation","text":"","code":"VariableAssociation(   df,   cols,   target_var,   targetvar_lab = \"Score\",   discrete_colors = NULL,   continuous_color = \"#8C6D03\",   color_palette = \"Set2\",   sizeannot = 3,   ncol = NULL,   nrow = NULL,   numeric = \"pearson\",   categorical_bin = \"t.test\",   categorical_multi = \"anova\",   title = NULL,   titlesize = 14,   nonsignif_color = \"grey\",   signif_color = \"red\",   saturation_value = NULL,   sig_threshold = 0.05,   widthlabels = 18,   pointSize = 5,   widths = 1,   heights = 1 )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/VariableAssociation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Statistical Associations Between Variables and a Target Score — VariableAssociation","text":"df data frame containing target variable predictors. cols character vector predictor variables include plots. target_var dependent variable plotted. targetvar_lab string specifying label target variable. Default \"Score\". discrete_colors Optional. named list specifying custom colors categorical variables. element named vector names correspond factor levels. continuous_color color numeric variables scatter plots. Default \"#8C6D03\". color_palette color palette RColorBrewer categorical variables. Default \"Set2\". sizeannot font size p-value annotations plots. Default 3. ncol Number columns arranged plot grid. NULL, layout auto-determined. nrow Number rows arranged plot grid. NULL, layout auto-determined. numeric correlation method numeric predictors. Options: \"pearson\" (default), \"spearman\", \"kendall\". categorical_bin statistical test binary categorical variables. Options: \"t.test\" (default) \"wilcoxon\". categorical_multi statistical test multi-level categorical variables. Options: \"anova\" (default) \"kruskal-wallis\". title string specifying main title grid plots. titlesize Numeric; font size main title grid plots (default = 14). nonsignif_color string specifying color middle adjusted p-value gradient. Default \"white\". Lower limit correspond value sig_threshold. signif_color string specifying color low end adjusted p-value gradient value chosen significance (sig_threshold). Default \"blue\". saturation_value numeric value specifying lower limit adjusted p-value gradient, color correspond signif_color. Default results' minimum, unless value sig_threshold; case, 0.001. sig_threshold numeric value specifying threshold significance visualization plot. Default: 0.05. widthlabels integer controlling maximum width contrast labels text wrapping. Default: 18. pointSize Numeric. size points lollipop plot (default 5). widths Numerical vector relative columns widths. length number variables provided. Default plot width. heights Numerical vector relative columns heights  length number variables provided. Default plot height","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/VariableAssociation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Statistical Associations Between Variables and a Target Score — VariableAssociation","text":"named list two elements: plot: ggarrange object displaying arranged statistical plots grid format. data: named list containing statistical test results variable, entry data frame metric values p-values.","code":""},{"path":[]},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/VariableAssociation.html","id":"plot-types","dir":"Reference","previous_headings":"","what":"Plot Types","title":"Visualize Statistical Associations Between Variables and a Target Score — VariableAssociation","text":"Numeric Predictors: Scatter plots regression lines, annotated correlation metrics. Categorical Predictors: Density plots colored factor levels, annotated test statistics.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/VariableAssociation.html","id":"variable-classification-amp-statistical-methods","dir":"Reference","previous_headings":"","what":"Variable Classification & Statistical Methods","title":"Visualize Statistical Associations Between Variables and a Target Score — VariableAssociation","text":"Numeric: Continuous numeric integer variables 10 unique values. Test: Pearson, Spearman, Kendall correlation. Categorical Bin: Binary categorical variables (factors, characters, integers exactly 2 unique values). Test: T-test Wilcoxon rank-sum test. Categorical Multi: Categorical variables 2 unique values (10 levels recommended). Test: ANOVA (default) Kruskal-Wallis. ANOVA used, Tukey’s HSD post-hoc test performed. warning issued categorical variable 10 unique values.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/VariableAssociation.html","id":"color-customization","dir":"Reference","previous_headings":"","what":"Color Customization","title":"Visualize Statistical Associations Between Variables and a Target Score — VariableAssociation","text":"Continuous Variables: continuous_color specifies color scatter plot points. Categorical Variables: User can provide named list (discrete_colors) custom colors factor levels. discrete_colors NULL, colors chosen RColorBrewer palette (color_palette). plot annotated corresponding statistical test result (e.g., correlation coefficient, ANOVA F-value, t-test statistic) p-values. categorical variable 10 unique levels, warning issued. discrete_colors provided, overrides color_palette specified variables. ncol nrow NULL, function automatically determines optimal grid layout.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/VisualiseIndividualGenes.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Individual Genes' Expression Using Various Methods — VisualiseIndividualGenes","title":"Visualize Individual Genes' Expression Using Various Methods — VisualiseIndividualGenes","text":"function provides multiple visualization methods analyzing individual genes expression dataset. Users can generate violin plots, expression heatmaps, correlation heatmaps, ROC curves, effect size plots.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/VisualiseIndividualGenes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Individual Genes' Expression Using Various Methods — VisualiseIndividualGenes","text":"","code":"VisualiseIndividualGenes(   data,   metadata,   genes,   method = c(\"violins\", \"expr_heatmap\", \"corr_heatmap\", \"roc\", \"effectsize\", \"all\"),   plot = TRUE,   GroupingVariable = NULL,   ColorVariable = NULL,   ColorValues = NULL,   pointSize = 2,   title = NULL,   widthTitle = 16,   y_limits = NULL,   legend_nrow = NULL,   ncol = NULL,   nrow = NULL,   divide = NULL,   invert_divide = FALSE,   xlab = NULL,   colorlab = NULL )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/VisualiseIndividualGenes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Individual Genes' Expression Using Various Methods — VisualiseIndividualGenes","text":"data data frame rows correspond genes columns correspond samples. row names gene identifiers. metadata data frame containing sample metadata. first column contain sample identifiers matching column names data. genes character vector gene names plotted. 20 genes provided, warning issued. method character string specifying visualization method use. Options \"violins\", \"expr_heatmap\", \"corr_heatmap\", \"roc\", \"effectsize\", \"\". Default \"violins\". \"\" selected, methods applied. plot logical value indicating whether display generated plots (TRUE) (FALSE). Default TRUE. GroupingVariable character string specifying column name metadata used grouping samples x-axis violin plots. ColorVariable character string specifying column name metadata used color points violin plots. ColorValues optional named vector mapping unique values ColorVariable specific colors. pointSize numeric value specifying size jittered points violin plots. Default 2. title optional character string specifying title plot. widthTitle optional integer specifying maximum width title inserting line breaks. Default 16. y_limits numeric vector length 2 specifying limits y-axis violin plots. NULL, y-axis adjusted automatically. Default NULL. legend_nrow numeric value specifying number rows legend violin plots. NULL, default number rows determined automatically. ncol optional numeric value specifying number columns grid layout violin plots. NULL, automatically determined. nrow optional numeric value specifying number rows grid layout violin plots. NULL, automatically determined. divide character string specifying column metadata used divide violin plots facets. Default NULL. invert_divide logical value indicating whether invert facet layout violin plots. Default FALSE. xlab optional character string specifying label x-axis violin plots. Default name GroupingVariable. colorlab optional character string specifying legend title color variable. Default NULL.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/VisualiseIndividualGenes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Individual Genes' Expression Using Various Methods — VisualiseIndividualGenes","text":"named list selected method (e.g., \"violins\", \"expr_heatmap\", etc.) key. element list named list following structure: data data frame matrix containing transformed data used plotting, formatted according selected method. plot generated plot object (e.g., ggplot2 object) corresponding visualization. aux Additional parameters, specific method. plot = TRUE, plots also displayed output.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/VisualiseIndividualGenes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize Individual Genes' Expression Using Various Methods — VisualiseIndividualGenes","text":"function calls multiple sub-functions based selected visualization method: IndividualGenes_Violins(): Generates violin plots gene expression (log2 transformed). IndividualGenes_ExprHeatmap(): Creates heatmap expression values. IndividualGenes_CorrHeatmap(): Computes visualizes correlation heatmap. IndividualGenes_ROC(): Plots receiver operating characteristic (ROC) curves. IndividualGenes_EffectSize(): Computes visualizes effect sizes. function returns list plots. method = \"\", available visualizations included.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/Volcano_Cohen.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano Plot of Cohen's d Effect Sizes and Adjusted p-values — Volcano_Cohen","title":"Volcano Plot of Cohen's d Effect Sizes and Adjusted p-values — Volcano_Cohen","text":"function computes Cohen's d effect sizes adjusted p-values multiple gene signatures across defined contrasts, generates volcano plot (Cohen's d vs -log10(padj)) using ggplot2. point represents method-signature pair, faceted contrast.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/Volcano_Cohen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano Plot of Cohen's d Effect Sizes and Adjusted p-values — Volcano_Cohen","text":"","code":"Volcano_Cohen(   cohenlist,   titlesize = 12,   ColorValues = NULL,   title = NULL,   widthlegend = 22,   pointSize = 3,   sig_threshold = 0.05,   cohen_threshold = 0.5,   colorPalette = \"Set3\",   nrow = NULL,   ncol = NULL )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/Volcano_Cohen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano Plot of Cohen's d Effect Sizes and Adjusted p-values — Volcano_Cohen","text":"cohenlist named list element corresponds gene signature. Output CohenD_allConditions. signature element list three components: CohenD data frame rows methods columns group contrasts (formatted \\\"Group1:Group2\\\"), containing computed Cohen\\'s d effect sizes. PValue data frame structure CohenD containing corresponding p-values. padj data frame structure PValue containing corresponding p-values corrected using BH method, signatures contrasts, method. titlesize Integer. Size facet strip titles. Default 12. ColorValues Character vector colors used distinguish signatures. NULL, colors automatically generated. title Optional title overall plot. widthlegend Integer. Width used wrap long signature names. Default 22. pointSize Numeric. Size points plot. Default 3. sig_threshold Numeric. Adjusted p-value threshold significance. Default 0.05. cohen_threshold Numeric. Effect size threshold. Default 0.5. colorPalette Character. Name RColorBrewer palette use ColorValues provided. Default \"Set3\". nrow Optional numeric value specifying number rows grid layout. NULL, near-square grid computed. ncol Optional numeric value specifying number columns ggplot facet. NULL, near-square grid computed.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/Volcano_Cohen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volcano Plot of Cohen's d Effect Sizes and Adjusted p-values — Volcano_Cohen","text":"ggplot object showing faceted volcano plot Cohen's d effect sizes across signatures methods contrast.","code":""},{"path":[]},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/calculateDE.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Differential Gene Expression Statistics using limma — calculateDE","title":"Calculate Differential Gene Expression Statistics using limma — calculateDE","text":"function computes differential gene expression statistics gene using linear model via limma package. Users may supply custom design matrix directly via design argument, specify model formula (lmexpression) (e.g., ~0 + X ~X) variables metadata build design matrix. contrasts supplied, applied using limma::makeContrasts limma::contrasts.fit. Alternatively, using lmexpression supplied design, specific coefficient indices may provided via coefs extract corresponding gene-level statistics.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/calculateDE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Differential Gene Expression Statistics using limma — calculateDE","text":"","code":"calculateDE(   data,   metadata = NULL,   variables = NULL,   modelmat = NULL,   contrasts = NULL,   ignore_NAs = FALSE )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/calculateDE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Differential Gene Expression Statistics using limma — calculateDE","text":"data numeric matrix gene expression values genes rows samples columns. Row names must correspond gene identifiers. Data transformed (.e., log2 transformed). metadata data frame containing sample metadata used build design matrix (unless design provided directly). variables character vector specifying variable(s) metadata use default linear model. Ignored lmexpression design provided. modelmat (Optional) user-supplied design matrix. provided, design used directly lmexpression variables ignored. order samples design matrix match order data. contrasts character vector specifying contrasts applied (e.g., c(\"-B\")). multiple contrasts provided, function returns list DE results (one per contrast). Required lmexpression NULL, optional otherwise. provided, average expression profile condition returned instead differential gene expression. ignore_NAs Boolean (default: FALSE). Whether ignore NAs metadata. TRUE, rows NAs removed analysis, leading loss data fitted model. applicable variables provided.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/calculateDE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Differential Gene Expression Statistics using limma — calculateDE","text":"list data-frames differential expression statistics","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/calculateDE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Differential Gene Expression Statistics using limma — calculateDE","text":"function fits linear model limma::lmFit applies empirical Bayes moderation limma::eBayes. Depending input: design matrix provided via design, design used directly. Otherwise, design matrix constructed using variables argument (intercept). contrasts provided, applied using limma::makeContrasts limma::contrasts.fit. contrasts provided, function returns possible coefficients fitted linear model.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/calculateDE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Differential Gene Expression Statistics using limma — calculateDE","text":"","code":"if (FALSE) { # \\dontrun{   # Create example data:   data <- matrix(rnorm(1000), nrow = 100, ncol = 10)   rownames(data) <- paste0(\"gene\", 1:100)   colnames(data) <- paste0(\"sample\", 1:10)   metadata <- data.frame(sample = colnames(data), X = rep(c(\"A\", \"B\"), each = 5))    # Example 1: Build design matrix from variables with a contrast:   de_res <- calculateDE(data, metadata, variables = \"X\", contrasts = \"A-B\")    # Example 2: Supply a custom design matrix directly:   design <- model.matrix(~0 + X, data = metadata)   de_res3 <- calculateDE(data, metadata, variables = \"X\", design = design, contrasts = \"A-B\") } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/calculateScore_logmedian_bidirectional.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Log-Median Scores for Bidirectional Gene Sets — calculateScore_logmedian_bidirectional","title":"Calculate Log-Median Scores for Bidirectional Gene Sets — calculateScore_logmedian_bidirectional","text":"Computes gene signature scores considering upregulated downregulated genes separately, calculates differential score subtracting downregulated upregulated scores.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/calculateScore_logmedian_bidirectional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Log-Median Scores for Bidirectional Gene Sets — calculateScore_logmedian_bidirectional","text":"","code":"calculateScore_logmedian_bidirectional(data, signature)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/calculateScore_logmedian_bidirectional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Log-Median Scores for Bidirectional Gene Sets — calculateScore_logmedian_bidirectional","text":"data data frame normalized counts (genes rows, samples columns). signature data frame : first column containing gene names. second column specifying enrichment direction (1 upregulated, -1 downregulated).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/calculateScore_logmedian_bidirectional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Log-Median Scores for Bidirectional Gene Sets — calculateScore_logmedian_bidirectional","text":"named vector log-median-centered scores per sample.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/calculateScore_logmedian_unidirectional.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Log-Median Scores for Unidirectional Gene Sets — calculateScore_logmedian_unidirectional","title":"Calculate Log-Median Scores for Unidirectional Gene Sets — calculateScore_logmedian_unidirectional","text":"Computes log-median-centered scores gene signatures genes expected enriched direction, direction known.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/calculateScore_logmedian_unidirectional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Log-Median Scores for Unidirectional Gene Sets — calculateScore_logmedian_unidirectional","text":"","code":"calculateScore_logmedian_unidirectional(data, signature)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/calculateScore_logmedian_unidirectional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Log-Median Scores for Unidirectional Gene Sets — calculateScore_logmedian_unidirectional","text":"data data frame normalized counts (genes rows, samples columns). signature vector gene names data frame first column contains gene names.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/calculateScore_logmedian_unidirectional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Log-Median Scores for Unidirectional Gene Sets — calculateScore_logmedian_unidirectional","text":"named vector log-median-centered scores per sample.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/cohen_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Cohen\\'s d Effect Size — cohen_d","title":"Compute Cohen\\'s d Effect Size — cohen_d","text":"Computes absolute Cohen\\'s d effect size two numeric vectors. function returns absolute value difference means divided pooled standard deviation.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/cohen_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Cohen\\'s d Effect Size — cohen_d","text":"","code":"cohen_d(x, y)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/cohen_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Cohen\\'s d Effect Size — cohen_d","text":"x numeric vector representing values group 1. y numeric vector representing values group 2.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/cohen_d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Cohen\\'s d Effect Size — cohen_d","text":"numeric value representing Cohen\\'s d. Returns NA either group fewer two observations pooled standard deviation zero.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/colRanking.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Independent Column-wise Ranks of Matrix Elements — colRanking","title":"Compute Independent Column-wise Ranks of Matrix Elements — colRanking","text":"function computes rank element every column numeric matrix independently. column, smallest element receives rank 1, second smallest rank 2, .","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/colRanking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Independent Column-wise Ranks of Matrix Elements — colRanking","text":"","code":"colRanking(x, ties.method = \"average\")"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/colRanking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Independent Column-wise Ranks of Matrix Elements — colRanking","text":"x numeric matrix. ties.method character string specifying method used tie-breaking. Options include \"average\", \"first\", \"random\", \"max\", \"min\". default \"average\".","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/colRanking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Independent Column-wise Ranks of Matrix Elements — colRanking","text":"numeric matrix dimensions x column contains ranks corresponding column's elements.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_cohen_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Pairwise Cohen\\'s d and P-Values — compute_cohen_d","title":"Compute Pairwise Cohen\\'s d and P-Values — compute_cohen_d","text":"Computes Cohen\\'s d effect sizes corresponding p-values pairwise comparisons grouping variable data frame.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_cohen_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Pairwise Cohen\\'s d and P-Values — compute_cohen_d","text":"","code":"compute_cohen_d(   dfScore,   variable,   quantitative_var = \"score\",   mode = c(\"simple\", \"medium\", \"extensive\") )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_cohen_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Pairwise Cohen\\'s d and P-Values — compute_cohen_d","text":"dfScore data frame containing least one numeric column grouping variable. Output flatten_results. variable string specifying name categorical grouping column dfScore. quantitative_var string specifying name numeric column (default \"score\").","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_cohen_d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Pairwise Cohen\\'s d and P-Values — compute_cohen_d","text":"data frame following columns: Group1 first group pair. Group2 second group pair. CohenD computed Cohen\\'s d effect size comparison. PValue p-value t-test comparing two groups.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_cohens_f_pval.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Cohen's f and p-value for a given model and predictor — compute_cohens_f_pval","title":"Compute Cohen's f and p-value for a given model and predictor — compute_cohens_f_pval","text":"function calculates Cohen's f effect size corresponding p-value given linear model ANOVA model based predictor variable type (numeric categorical).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_cohens_f_pval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Cohen's f and p-value for a given model and predictor — compute_cohens_f_pval","text":"","code":"compute_cohens_f_pval(model, type)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_cohens_f_pval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Cohen's f and p-value for a given model and predictor — compute_cohens_f_pval","text":"model linear model (lm) ANOVA model (aov) fitted data. type string indicating whether predictor numeric categorical. Options \"Numeric\" \"Categorical\".","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_cohens_f_pval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Cohen's f and p-value for a given model and predictor — compute_cohens_f_pval","text":"named vector two elements: Cohen_f: Cohen's f effect size value. P_Value: p-value statistical test.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_cohens_f_pval.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Cohen's f and p-value for a given model and predictor — compute_cohens_f_pval","text":"Cohen's f effect size computed eta-squared (\\(\\eta^2\\)) value. numeric predictors (continuous variables), p-value obtained t-test summary(lm(...)). categorical predictors (binary multi-level), p-value obtained F-test anova(lm(...)).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_stat_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Statistical Tests for Variable Associations with a Target Variable — compute_stat_tests","title":"Compute Statistical Tests for Variable Associations with a Target Variable — compute_stat_tests","text":"Performs statistical tests assess relationship predictor variables target variable, selecting appropriate methods based variable types. Returns list data frames containing metric values p-values.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_stat_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Statistical Tests for Variable Associations with a Target Variable — compute_stat_tests","text":"","code":"compute_stat_tests(   df,   target_var,   cols = NULL,   numeric = \"pearson\",   categorical_bin = \"t.test\",   categorical_multi = \"anova\" )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_stat_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Statistical Tests for Variable Associations with a Target Variable — compute_stat_tests","text":"df data frame containing target variable predictors. target_var string specifying dependent variable. cols Optional. character vector predictor variables. NULL, variables except target_var used. numeric correlation method numeric predictors. Options: \"pearson\" (default), \"spearman\", \"kendall\". categorical_bin statistical test binary categorical variables. Options: \"t.test\" (default) \"wilcoxon\". categorical_multi statistical test multi-level categorical variables. Options: \"anova\" (default) \"kruskal-wallis\".","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_stat_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Statistical Tests for Variable Associations with a Target Variable — compute_stat_tests","text":"named list (one entry per variable analysed) element data frame : Metric: test statistic (correlation coefficient, t-statistic, ANOVA F-value, etc.). p-value: significance value test. Categorical Multi, multiple rows included pairwise comparisons (Tukey HSD results).","code":""},{"path":[]},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_stat_tests.html","id":"variable-classification","dir":"Reference","previous_headings":"","what":"Variable Classification","title":"Compute Statistical Tests for Variable Associations with a Target Variable — compute_stat_tests","text":"Numeric: Continuous numeric integer variables 10 unique values. Categorical Bin: Binary categorical variables (factors, characters, integers exactly 2 unique values). Categorical Multi: Categorical variables 2 unique values (10 levels recommended). warning issued categorical variables 10 unique values.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_stat_tests.html","id":"statistical-tests-applied","dir":"Reference","previous_headings":"","what":"Statistical Tests Applied","title":"Compute Statistical Tests for Variable Associations with a Target Variable — compute_stat_tests","text":"Numeric Predictors: Pearson, Spearman, Kendall correlation. Categorical Bin Predictors: T-test Wilcoxon rank-sum test. Categorical Multi Predictors: ANOVA (default) Kruskal-Wallis test. ANOVA used, Tukey’s HSD post-hoc test performed multiple comparisons. function automatically detects variable types applies appropriate test. categorical variable 10 unique levels, warning issued. invalid statistical test requested, function stops error message.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/compute_stat_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Statistical Tests for Variable Associations with a Target Variable — compute_stat_tests","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   score = c(80, 85, 90, 95, 100),   age = c(25, 30, 35, 40, 45),   gender = c(\"Male\", \"Female\", \"Male\", \"Female\", \"Male\"),   group = factor(c(\"A\", \"B\", \"A\", \"B\", \"C\")) )  results <- compute_stat_tests(df, target_var = \"score\") print(results) } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/counts_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene Expression Counts for Marthandan et al. (2016) RNA-Seq Data — counts_example","title":"Gene Expression Counts for Marthandan et al. (2016) RNA-Seq Data — counts_example","text":"numeric matrix containing gene expression data Marthandan et al. (2016) study (GEO code GSE63577). data represent normalized (non-transformed) counts genes across samples.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/counts_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene Expression Counts for Marthandan et al. (2016) RNA-Seq Data — counts_example","text":"","code":"counts_example"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/counts_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene Expression Counts for Marthandan et al. (2016) RNA-Seq Data — counts_example","text":"numeric matrix rows corresponding genes columns corresponding samples. Row names indicate gene symbols column names sample identifiers.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/counts_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gene Expression Counts for Marthandan et al. (2016) RNA-Seq Data — counts_example","text":"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE63577","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/counts_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gene Expression Counts for Marthandan et al. (2016) RNA-Seq Data — counts_example","text":"samples quality-controlled using FastQC aligned using kallisto (v0.46.1) RefSeq v109 transcriptome. original dataset 45 samples, intermediate time points HFF MRC5 removed.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/counts_example.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gene Expression Counts for Marthandan et al. (2016) RNA-Seq Data — counts_example","text":"Marthandan S, Priebe S, Baumgart M, Groth M et al. Similarities Gene Expression Profiles Vitro Aging Primary Human Embryonic Lung Foreskin Fibroblasts. Biomed Res Int 2015;2015:731938. PMID: 26339636 Marthandan S, Baumgart M, Priebe S, Groth M et al. Conserved Senescence Associated Genes Pathways Primary Human Fibroblasts Detected RNA-Seq. PLoS One 2016;11(5):e0154531. PMID: 27140416","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/create_contrast_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Contrast Column in Metadata — create_contrast_column","title":"Create Contrast Column in Metadata — create_contrast_column","text":"function extracts processes contrast groups given contrast string, assigns contrast labels metadata subset based variable interest.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/create_contrast_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Contrast Column in Metadata — create_contrast_column","text":"","code":"create_contrast_column(metadata, variable_name, contrast)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/create_contrast_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Contrast Column in Metadata — create_contrast_column","text":"metadata data frame containing sample metadata. variable_name character string specifying column name metadata represents variable interest. contrast character string representing contrast form \"(+ B) - (C + D)\" (e.g.).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/create_contrast_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Contrast Column in Metadata — create_contrast_column","text":"subset metadata added cohentest column, indicating group membership based contrast.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/flatten_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten a Nested List of Results into a Data Frame — flatten_results","title":"Flatten a Nested List of Results into a Data Frame — flatten_results","text":"Converts nested list (first level method, second level gene signature, third level data frame) single data frame. Additional columns method signature added data frame.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/flatten_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten a Nested List of Results into a Data Frame — flatten_results","text":"","code":"flatten_results(nested_list)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/flatten_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten a Nested List of Results into a Data Frame — flatten_results","text":"nested_list nested list structure: list(method = list(signature = data.frame(...))).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/flatten_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten a Nested List of Results into a Data Frame — flatten_results","text":"data frame combining nested data frames, added columns method signature.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/generate_all_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate All Possible Unique Contrasts Between Groups — generate_all_contrasts","title":"Generate All Possible Unique Contrasts Between Groups — generate_all_contrasts","text":"function creates statistical contrasts levels categorical variable. Users can choose level complexity: \"simple\": Pairwise comparisons (e.g., - B). \"medium\": Pairwise comparisons plus comparisons mean groups. \"extensive\": possible groupwise contrasts, ensuring balance number terms side.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/generate_all_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate All Possible Unique Contrasts Between Groups — generate_all_contrasts","text":"","code":"generate_all_contrasts(levels, mode = \"simple\")"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/generate_all_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate All Possible Unique Contrasts Between Groups — generate_all_contrasts","text":"levels character vector unique group levels. mode string specifying level detail contrasts. Options \"simple\" (pairwise ), \"medium\" (pairwise + vs. mean others), \"extensive\" (possible balanced groupwise contrasts). Default \"extensive\".","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/generate_all_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate All Possible Unique Contrasts Between Groups — generate_all_contrasts","text":"character vector unique contrast expressions.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/generate_all_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate All Possible Unique Contrasts Between Groups — generate_all_contrasts","text":"","code":"if (FALSE) { # \\dontrun{ levels <- c(\"A\", \"B\", \"C\", \"D\") generate_all_contrasts(levels, mode = \"simple\")    # Pairwise only generate_all_contrasts(levels, mode = \"medium\")    # Pairwise + mean comparisons generate_all_contrasts(levels, mode = \"extensive\") # All balanced contrasts } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/getRanking.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Gene Expression Ranking — getRanking","title":"Get Gene Expression Ranking — getRanking","text":"Computes rank sum given gene set within sample based expression level.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/getRanking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Gene Expression Ranking — getRanking","text":"","code":"getRanking(data, sample, geneset)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/getRanking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Gene Expression Ranking — getRanking","text":"data data frame rows represent genes, columns represent samples, values correspond expression levels. sample character string specifying sample name (column data). geneset vector gene names ranked.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/getRanking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Gene Expression Ranking — getRanking","text":"sum ranks genes found sample.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/getRanking.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Gene Expression Ranking — getRanking","text":"function orders gene expression levels lowest highest. determines rank gene geneset returns sum ranks. genes missing, omitted ranking calculation.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/getRanking.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Gene Expression Ranking — getRanking","text":"","code":"if (FALSE) { # \\dontrun{ # Example dataset with 5 genes and 3 samples set.seed(123) data <- as.data.frame(matrix(runif(15, 1, 100), nrow = 5, ncol = 3)) rownames(data) <- paste0(\"Gene_\", 1:5) colnames(data) <- paste0(\"Sample_\", 1:3)  # Define gene set geneset <- c(\"Gene_1\", \"Gene_3\", \"Gene_5\")  # Compute ranking for Sample_1 rank_score <- getRanking(data, \"Sample_1\", geneset) print(rank_score) } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/identify_variable_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Variable Types — identify_variable_type","title":"Identify Variable Types — identify_variable_type","text":"Determines type variable given data frame. Variables classified \"Numeric\", \"Categorical Bin\" (binary categorical), \"Categorical Multi\" (multi-level categorical). Warnings issued categorical variables 10 unique values.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/identify_variable_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Variable Types — identify_variable_type","text":"","code":"identify_variable_type(df, cols = NULL)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/identify_variable_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Variable Types — identify_variable_type","text":"df data frame containing variables classify. cols character vector column names consider.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/identify_variable_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Variable Types — identify_variable_type","text":"named character vector names correspond column names values indicate variable type: \"Numeric\", \"Categorical Bin\", \"Categorical Multi\".","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/identify_variable_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Variable Types — identify_variable_type","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   age = c(25, 30, 35, 40),   gender = c(\"Male\", \"Female\", \"Female\", \"Male\"),   score = c(80, 85, 90, 95) ) identify_variable_type(df) } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/markeR.html","id":null,"dir":"Reference","previous_headings":"","what":"markeR: An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers — markeR","title":"markeR: An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers — markeR","text":"markeR package provides tools evaluating gene signatures across phenotypes transcriptomics datasets (especially bulk RNA-seq). implements scoring enrichment approaches, alongside intuitive visualizations performance metrics. Key features: Score-based signature quantification (e.g., median-centered, ssGSEA, ranking) Enrichment analysis using GSEA Visualization gene expression, scores, enrichment results","code":""},{"path":[]},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/markeR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"markeR: An R Toolkit for Evaluating Gene Signatures as Phenotypic Markers — markeR","text":"Maintainer: Rita Martins-Silva rita.silva@gimm.pt (ORCID) Authors: Alexandre Kaizeler (ORCID) [contributor] Nuno Luís Barbosa-Morais (ORCID) [lead, thesis advisor]","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/metadata_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for Marthandan et al. (2016) RNA-Seq Study — metadata_example","title":"Metadata for Marthandan et al. (2016) RNA-Seq Study — metadata_example","text":"data frame containing metadata samples Marthandan et al. (2016) study (GEO code GSE63577).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/metadata_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for Marthandan et al. (2016) RNA-Seq Study — metadata_example","text":"","code":"metadata_example"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/metadata_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Metadata for Marthandan et al. (2016) RNA-Seq Study — metadata_example","text":"data frame 45 rows 6 columns: sampleID Unique sample identifier. DatasetID Identifier dataset (e.g., \"Marthandan2016\"). CellType Cell type, e.g. \"Fibroblast\". Condition Experimental condition (\"Senescent\" \"Proliferative\"). SenescentType Mechanism senescence (e.g., \"Telomere shortening\" senescent samples, \"none\" proliferative). Treatment Treatment age descriptor (e.g., \"PD72 (Replicative senescence)\" senescent samples, \"young\" proliferative).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/metadata_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Metadata for Marthandan et al. (2016) RNA-Seq Study — metadata_example","text":"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE63577","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/metadata_example.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Metadata for Marthandan et al. (2016) RNA-Seq Study — metadata_example","text":"Marthandan S, Priebe S, Baumgart M, Groth M et al. Similarities Gene Expression Profiles Vitro Aging Primary Human Embryonic Lung Foreskin Fibroblasts. Biomed Res Int 2015;2015:731938. PMID: 26339636 Marthandan S, Baumgart M, Priebe S, Groth M et al. Conserved Senescence Associated Genes Pathways Primary Human Fibroblasts Detected RNA-Seq. PLoS One 2016;11(5):e0154531. PMID: 27140416","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotCombinedGSEA.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Combined GSEA Results — plotCombinedGSEA","title":"Plot Combined GSEA Results — plotCombinedGSEA","text":"function creates scatter plot visualizing multiple GSEA (Gene Set Enrichment Analysis) results across different contrasts. point represents pathway, : x-axis corresponds Normalized Enrichment Score (NES). y-axis corresponds significance level (-log10 adjusted p-value). color represents different pathways. shape represents different contrasts. dashed horizontal line marks chosen significance threshold.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotCombinedGSEA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Combined GSEA Results — plotCombinedGSEA","text":"","code":"plotCombinedGSEA(   GSEA_results,   sig_threshold = 0.05,   PointSize = 4,   widthlegend = 16 )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotCombinedGSEA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Combined GSEA Results — plotCombinedGSEA","text":"GSEA_results named list data frames, data frame contains GSEA results contrast. data frame columns: NES (Normalized Enrichment Score), padj (adjusted p-value), pathway (pathway name). Output runGSEA. sig_threshold Numeric, default = 0.05. Adjusted p-value threshold significance. dashed horizontal line drawn threshold. PointSize Numeric, default = 4. Size plotted points. widthlegend Numeric, default = 16. Controls width pathway labels legend. width_text Numeric, default = 16. Width wrapping pathway names plot.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotCombinedGSEA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Combined GSEA Results — plotCombinedGSEA","text":"ggplot2 object displaying combined GSEA results.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotCombinedGSEA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Combined GSEA Results — plotCombinedGSEA","text":"","code":"# Example GSEA results (mock data) GSEA_results <- list( \"Contrast1\" = data.frame( NES = rnorm(3),   padj = runif(3),   pathway = paste(\"Pathway\", 1:3),   stat_used = c(\"t\", \"B\", \"B\") ), \"Contrast2\" = data.frame(   NES = rnorm(3),   padj = runif(3),   pathway = paste(\"Pathway\", 4:6),   stat_used = c(\"t\", \"B\", \"B\") ) )   # Generate the plot plotCombinedGSEA(GSEA_results, sig_threshold = 0.05, PointSize = 4)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotGSEAenrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot GSEA Enrichment Results — plotGSEAenrichment","title":"Plot GSEA Enrichment Results — plotGSEAenrichment","text":"function generates enrichment plots gene sets using fgsea::plotEnrichment() function. supports individual plots (returned list) grid layout using ggpubr::ggarrange().","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotGSEAenrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot GSEA Enrichment Results — plotGSEAenrichment","text":"","code":"plotGSEAenrichment(   GSEA_results,   DEGList,   gene_sets,   widthTitle = 24,   grid = FALSE,   nrow = NULL,   ncol = NULL,   titlesize = 12 )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotGSEAenrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot GSEA Enrichment Results — plotGSEAenrichment","text":"GSEA_results named list data frames containing GSEA results contrast. data frame column named pathway specifying gene set, columns NES padj results. Output runGSEA. DEGList named list data frames containing differentially expressed genes (DEGs) contrast. data frame must include column named t t-statistics ranking genes. Output calculateDE. gene_sets named list gene sets, entry either: vector gene names (unidirectional gene set) data frame two columns: gene names direction (+1 enriched -1 depleted). widthTitle Integer. maximum width (characters) wrapping plot titles. Default 24. grid Logical. TRUE, plots arranged grid using ggpubr::ggarrange(). Default FALSE. nrow Integer. Number rows grid layout (used grid = TRUE). NULL, auto-calculated. ncol Integer. Number columns grid layout (used grid = TRUE). NULL, auto-calculated. titlesize Integer. Font size plot titles. Default 12.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotGSEAenrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot GSEA Enrichment Results — plotGSEAenrichment","text":"grid = FALSE, returns named list ggplot objects (plot corresponding contrast-signature pair). grid = TRUE, returns single ggplot object enrichment plots arranged grid.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotGSEAenrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot GSEA Enrichment Results — plotGSEAenrichment","text":"","code":"# Example GSEA results (mock data, missing columns if running by runGSEA)  GSEA_results <- list( \"Contrast1\" = data.frame( NES = rnorm(3),   padj = runif(3),   pathway = paste(\"Pathway\", 1:3),   stat_used = c(\"t\", \"B\", \"B\") ), \"Contrast2\" = data.frame(   NES = rnorm(3),   padj = runif(3),   pathway = paste(\"Pathway\", 4:6),   stat_used = c(\"t\", \"B\", \"B\") ) )   # Generate the plot plot <- plotCombinedGSEA(GSEA_results, sig_threshold = 0.05, PointSize = 4) print(plot)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotNESlollipop.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Lollipop Plot for GSEA Results — plotNESlollipop","title":"Create a Lollipop Plot for GSEA Results — plotNESlollipop","text":"function generates lollipop plot visualize Gene Set Enrichment Analysis (GSEA) results. Pathways shown y-axis, Normalized Enrichment Score (NES) shown x-axis. color lollipops represents adjusted p-values (padj), custom color gradient. supports multiple contrasts can combine individual plots grid layout.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotNESlollipop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Lollipop Plot for GSEA Results — plotNESlollipop","text":"","code":"plotNESlollipop(   GSEA_results,   signif_color = \"red\",   nonsignif_color = \"white\",   sig_threshold = 0.05,   saturation_value = NULL,   pointSize = 5,   grid = FALSE,   nrow = NULL,   ncol = NULL,   widthlabels = 18,   title = NULL,   titlesize = 12 )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotNESlollipop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Lollipop Plot for GSEA Results — plotNESlollipop","text":"GSEA_results named list data frames, containing GSEA results specific contrast. Output runGSEA. data frame must include following columns: pathway character vector pathway names. NES numeric vector Normalized Enrichment Scores pathways. padj numeric vector adjusted p-values pathways. signif_color string specifying color low end adjusted p-value gradient value chosen significance (sig_threshold). Default \"red\". nonsignif_color string specifying color middle adjusted p-value gradient. Default \"white\". Lower limit correspond value sig_threshold. sig_threshold numeric value sets midpoint color scale. Typically used significance threshold. Default 0.05. saturation_value numeric value specifying lower limit adjusted p-value gradient, color correspond signif_color. Default results' minimum, unless value sig_threshold; case, 0.001. pointSize Numeric. size points lollipop plot (default 5). grid logical value indicating whether arrange individual plots grid layout. TRUE, function combines plots grid. Default FALSE. nrow numeric value specifying number rows arrange plots grid = TRUE. NULL, function calculates automatically. Default NULL. ncol numeric value specifying number columns arrange plots grid = TRUE. NULL, function calculates automatically. Default NULL. widthlabels numeric value specifying maximum width pathway names. pathway name exceeds width, wrapped fit. Default 18. title character string title combined plot (used grid = TRUE). Default NULL. titlesize numeric value specifying font size title (used grid = TRUE). Default 12.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotNESlollipop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Lollipop Plot for GSEA Results — plotNESlollipop","text":"grid = FALSE, list ggplot objects returned, corresponding contrast. grid = TRUE, single ggplot object returned, representing combined grid plots.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotNESlollipop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Lollipop Plot for GSEA Results — plotNESlollipop","text":"function creates lollipop plot contrast GSEA_results list. plot includes: vertical segment pathway, x-coordinate represents NES y-coordinate represents pathway. colored point end segment, color represents adjusted p-value (padj), mapped using custom color gradient. pathway's padj value exceeds maximum value padj_limit, corresponding pathway colored using high_color. Additionally, missing values (NA) padj assigned high_color setting na.value = high_color. Pathway names wrapped using wrap_title function fit within specified width (widthlabels).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotNESlollipop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Lollipop Plot for GSEA Results — plotNESlollipop","text":"","code":"# Example GSEA results (mock data, missing columns if running by runGSEA)  GSEA_results <- list( \"Contrast1\" = data.frame( NES = rnorm(3),   padj = runif(3),   pathway = paste(\"Pathway\", 1:3),   stat_used = c(\"t\", \"B\", \"B\") ), \"Contrast2\" = data.frame(   NES = rnorm(3),   padj = runif(3),   pathway = paste(\"Pathway\", 4:6),   stat_used = c(\"t\", \"B\", \"B\") ) )   # Generate individual plots without grid plot_list <- plotNESlollipop(GSEA_results)  # Generate combined grid of plots with custom title combined_plot <- plotNESlollipop(GSEA_results, grid = TRUE, title = \"GSEA Results Overview\", titlesize = 14)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal Component Analysis (PCA) Plot — plotPCA","title":"Principal Component Analysis (PCA) Plot — plotPCA","text":"function performs PCA given dataset visualizes results using ggplot2. allows users specify genes interest, customize scaling centering, color points based metadata variable.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal Component Analysis (PCA) Plot — plotPCA","text":"","code":"plotPCA(   data,   metadata = NULL,   genes = NULL,   scale = FALSE,   center = TRUE,   PCs = list(c(1, 2)),   ColorVariable = NULL,   ColorValues = NULL,   pointSize = 5,   legend_nrow = 2,   legend_position = c(\"bottom\", \"top\", \"right\", \"left\"),   ncol = NULL,   nrow = NULL )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal Component Analysis (PCA) Plot — plotPCA","text":"data numeric matrix data frame rows represent genes columns represent samples. metadata data frame containing sample metadata. first column contain sample names. Default NULL. genes character vector specifying genes included PCA. Default NULL (uses genes). scale Logical; TRUE, variables scaled PCA. Default FALSE. center Logical; TRUE, variables centered PCA. Default TRUE. PCs list specifying principal components (PCs) plot. Default list(c(1,2)). ColorVariable character string specifying metadata column used coloring points. Default NULL. ColorValues vector specifying custom colors groups ColorVariable. Default NULL. pointSize Numeric; sets size points plot. Default 5. legend_nrow Integer; number rows legend. Default 2. legend_position Character; position legend (\"bottom\", \"top\", \"right\", \"left\"). Default \"bottom\". ncol Integer; number columns arranged PCA plots. Default determined automatically. nrow Integer; number rows arranged PCA plots. Default determined automatically.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotPCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal Component Analysis (PCA) Plot — plotPCA","text":"invisible list containing: plt ggplot2 ggarrange object displaying PCA plot. data data frame containing PCA-transformed data sample metadata (NULL).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotPCA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Principal Component Analysis (PCA) Plot — plotPCA","text":"function performs PCA using prcomp() visualizes results using ggplot2. metadata data frame provided, ensures sample order matches data metadata.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotPCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Principal Component Analysis (PCA) Plot — plotPCA","text":"","code":"if (FALSE) { # \\dontrun{ # Example dataset set.seed(123) data <- matrix(rnorm(1000), nrow=50, ncol=20) colnames(data) <- paste0(\"Sample\", 1:20) rownames(data) <- paste0(\"Gene\", 1:50)  metadata <- data.frame(Sample = colnames(data),                        Group = rep(c(\"A\", \"B\"), each = 10))  # Basic PCA plot plotPCA(data, metadata, ColorVariable = \"Group\") } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotVolcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano Plots from Differential Expression Results — plotVolcano","title":"Volcano Plots from Differential Expression Results — plotVolcano","text":"function creates composite volcano plot grid list differential expression results., single volcano genes highlight provided one contrast used. contrast (provided DEResultsList) gene signature (genes argument), volcano plot generated using specified x y statistics. default, invert = FALSE one gene signature provided (.e. names genes \"\" \"genes\"), plots arranged gene signatures rows contrasts columns. invert = TRUE, arrangement reversed (signatures columns contrasts rows). one gene signature provided, automatic grid computed.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotVolcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano Plots from Differential Expression Results — plotVolcano","text":"","code":"plotVolcano(   DEResultsList,   genes = NULL,   N = NULL,   x = \"logFC\",   y = \"-log10(adj.P.Val)\",   pointSize = 2,   color = \"#6489B4\",   highlightcolor = \"#05254A\",   highlightcolor_upreg = \"#038C65\",   highlightcolor_downreg = \"#8C0303\",   nointerestcolor = \"#B7B7B7\",   threshold_y = NULL,   threshold_x = NULL,   xlab = NULL,   ylab = NULL,   ncol = NULL,   nrow = NULL,   title = NULL,   labsize = 10,   widthlabs = 20,   invert = FALSE )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotVolcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano Plots from Differential Expression Results — plotVolcano","text":"DEResultsList named list data frames containing differential expression results contrast. data frame row names corresponding gene names include columns x y statistics. Output calculateDE. genes Optional. list gene signatures highlight. element may data frame (case first column extracted) vector gene names. NULL, genes highlighted. N Optional. integer specifying number top (bottom) genes annotate text labels. x Character. column name differential expression results use x-axis (default \"logFC\"). y Character. column name use y-axis (default \"-log10(adj.P.Val)\"). using default, threshold values threshold_y provided non-log scale (e.g., 0.05). pointSize Numeric. size points volcano plots (default 2). color Character. color used highlight interesting genes based thresholds (default \"#6489B4\"). highlightcolor Character. color used highlight genes belonging specified gene signatures (default \"#05254A\"), direction known specified. highlightcolor_upreg Character. color used highlight upregulated genes belonging specified gene signatures (default \"#038C65\"). highlightcolor_downreg Character. color used highlight downregulated genes belonging specified gene signatures (default \"#8C0303\"). nointerestcolor Character. color non-interesting genes (default \"#B7B7B7\"). threshold_y Numeric. threshold value y-axis statistic. y \"-log10(adj.P.Val)\", value provided non-log value (e.g., 0.05) transformed internally. threshold_x Numeric. threshold value x-axis statistic. xlab Optional. label x-axis; NULL, value x used. ylab Optional. label y-axis; NULL, value y used. ncol Optional. number columns arranging plots grid. applicable genes NULL. nrow Optional. number rows arranging plots grid. title Optional. main title entire composite plot. labsize Numeric. font size label annotations (default 10). title size value + 4. widthlabs Numeric. width parameter pass wrap_title() function wrapping long labels (default 20). invert Logical. FALSE (default), grid arranged gene signatures rows contrasts columns. TRUE, arrangement inverted (gene signatures columns contrasts rows).","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotVolcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volcano Plots from Differential Expression Results — plotVolcano","text":"composite plot (ggplot object) arranged grid volcano plots annotated labels.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotVolcano.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Volcano Plots from Differential Expression Results — plotVolcano","text":"function generates volcano plot combination gene signature (genes) contrast (DEResultsList). uses specified x y statistics plot points via ggplot2. Non-interesting genes plotted using nointerestcolor, genes specified gene signature (\"\") highlighted using highlightcolor. Optionally, top bottom N genes can annotated text labels (using ggrepel::geom_text_repel). Threshold lines x /y axes added threshold_x threshold_y provided. individual plots arranged grid using ggpubr::ggarrange annotated labels using ggpubr::annotate_figure grid::textGrob. custom wrap_title() function used wrap long labels. Additionally, function allows: Plotting differentially expressed genes based provided statistics (e.g., x = \"logFC\" y = \"-log10(adj.P.Val)\"). Coloring non-interesting genes highlighting genes belonging specific gene signatures. Annotation top N genes text labels (using ggrepel::geom_text_repel). Addition threshold lines x /y axes.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/plotVolcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Volcano Plots from Differential Expression Results — plotVolcano","text":"","code":"if (FALSE) { # \\dontrun{ # Create example data: data <- matrix(rnorm(1000), nrow = 100, ncol = 10) rownames(data) <- paste0(\"gene\", 1:100) colnames(data) <- paste0(\"sample\", 1:10) metadata <- data.frame(sample = colnames(data), X = rep(c(\"A\", \"B\"), each = 5))  # Example differential expression results (for two contrasts): de_results <- list(   Contrast1 = data.frame(logFC = rnorm(100), `-log10(adj.P.Val)` = runif(100, 0, 5),                          row.names = paste0(\"gene\", 1:100)),   Contrast2 = data.frame(logFC = rnorm(100), `-log10(adj.P.Val)` = runif(100, 0, 5),                          row.names = paste0(\"gene\", 1:100)) )  # Basic volcano plot grid with default settings: plotVolcano(de_results, genes = NULL, N = NULL,             x = \"logFC\", y = \"-log10(adj.P.Val)\", pointSize = 2,             color = \"#6489B4\", highlightcolor = \"#05254A\", nointerestcolor = \"#B7B7B7\",             threshold_y = NULL, threshold_x = NULL,             xlab = NULL, ylab = NULL, ncol = NULL, nrow = NULL, title = \"Volcano Plot Grid\",             labsize = 10, widthlabs = 20, invert = FALSE) } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/remove_division.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Division Notation in Contrast Labels — remove_division","title":"Remove Division Notation in Contrast Labels — remove_division","text":"function removes division notation (e.g., /2, /3) closing parentheses contrast labels.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/remove_division.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Division Notation in Contrast Labels — remove_division","text":"","code":"remove_division(contrasts)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/remove_division.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Division Notation in Contrast Labels — remove_division","text":"contrasts character vector containing contrast labels.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/remove_division.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Division Notation in Contrast Labels — remove_division","text":"character vector division notation removed.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/runGSEA.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Gene Set Enrichment Analysis (GSEA) for Multiple Contrasts — runGSEA","title":"Run Gene Set Enrichment Analysis (GSEA) for Multiple Contrasts — runGSEA","text":"function performs GSEA using fgsea contrast list differential expression results. automatically determines appropriate ranking statistic based gene set format unless specified user.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/runGSEA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Gene Set Enrichment Analysis (GSEA) for Multiple Contrasts — runGSEA","text":"","code":"runGSEA(   DEGList,   gene_sets,   stat = NULL,   ContrastCorrection = FALSE,   nPermSimple = 10000 )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/runGSEA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Gene Set Enrichment Analysis (GSEA) for Multiple Contrasts — runGSEA","text":"DEGList named list element represents contrast contains data frame differential expression results. data frame must include least \"t\" statistic \"B\" statistic gene. Row names correspond gene identifiers. gene_sets named list element represents gene set. gene set can : vector gene names (unidirectional gene sets). data frame two columns: Column 1: Gene names. Column 2: Expected direction (1 upregulated genes, -1 downregulated genes). stat Optional. statistic use ranking genes GSEA. NULL, automatically determined based gene set: \"B\" gene sets known direction (vectors). \"t\" unidirectional bidirectional gene sets (data frames). provided, argument overrides automatic selection. ContrastCorrection Logical, default FALSE. TRUE, applies additional multiple testing correction (Benjamini–Hochberg) across contrasts returned DEGList results list. accounts number contrasts tested per signature provides stringent control false discovery rate across multiple comparisons. FALSE, function corrects number gene sets. nPermSimple Number permutations simple fgsea implementation preliminary estimation P-values. Parameter fgsea.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/runGSEA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Gene Set Enrichment Analysis (GSEA) for Multiple Contrasts — runGSEA","text":"named list element corresponds contrast. contrast contains single data frame GSEA results gene sets. P-values corrected multiple testing based contrasts. result includes standard fgsea output plus two additional columns: pathway: name gene set. stat_used: statistic used ranking genes analysis (\"t\" \"B\").","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/runGSEA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Gene Set Enrichment Analysis (GSEA) for Multiple Contrasts — runGSEA","text":"","code":"# Example input data DEGList <- list(   Contrast1 = data.frame(t = rnorm(100), B = rnorm(100), row.names = paste0(\"Gene\", 1:100)),   Contrast2 = data.frame(t = rnorm(100), B = rnorm(100), row.names = paste0(\"Gene\", 1:100)) )  gene_sets <- list(   UnidirectionalSet = c(\"Gene1\", \"Gene5\", \"Gene20\"),   BidirectionalSet = data.frame(Gene = c(\"Gene2\", \"Gene10\", \"Gene15\"), Direction = c(1, -1, 1)) )  results <- runGSEA(DEGList, gene_sets)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/signature_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Signature Similarity via Jaccard Index or Fisher's Odds Ratio — signature_similarity","title":"Plot Signature Similarity via Jaccard Index or Fisher's Odds Ratio — signature_similarity","text":"Visualizes similarity user-defined gene signatures either user-defined signatures MSigDB gene sets, using either Jaccard index Fisher's Odds Ratio. Produces heatmap pairwise similarity metrics.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/signature_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Signature Similarity via Jaccard Index or Fisher's Odds Ratio — signature_similarity","text":"","code":"signature_similarity(   signatures,   other_user_signatures = NULL,   collection = NULL,   subcollection = NULL,   metric = c(\"jaccard\", \"odds_ratio\"),   universe = NULL,   or_threshold = 1,   pval_threshold = 0.05,   limits = NULL,   title_size = 12,   color_values = c(\"#F9F4AE\", \"#B44141\"),   title = NULL,   num_sigs_toplot = NULL,   jaccard_threshold = 0,   msig_subset = NULL,   width_text = 20,   na_color = \"grey90\" )"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/signature_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Signature Similarity via Jaccard Index or Fisher's Odds Ratio — signature_similarity","text":"signatures named list character vectors representing reference gene signatures. other_user_signatures Optional. named list character vectors representing user-defined signatures compare . collection Optional. MSigDB collection name (e.g., \"H\" hallmark, \"C2\" curated gene sets). Use msigdbr::msigdbr_collections() available options. subcollection Optional. Subcategory within MSigDB collection (e.g., \"CP:REACTOME\"). Use msigdbr::msigdbr_collections() available options. metric Character. Either \"jaccard\" \"odds_ratio\". universe Character vector. Background gene universe. Required odds ratio. or_threshold Numeric. Minimum Odds Ratio required gene set included plot. Default 1. pval_threshold Numeric. Maximum adjusted p-value show label. Default 0.05. limits Numeric vector length 2. Limits color scale. title_size Integer specifying font size plot title. Default 12. color_values Character vector colors used fill gradient. Default c(\"#F9F4AE\", \"#B44141\"). title Optional. Custom title plot. NULL, title defaults \"Signature Overlap\". num_sigs_toplot Optional. Integer. Maximum number comparison signatures (including user MSigDB) display. jaccard_threshold Numeric. Minimum Jaccard index required gene set included plot. Default 0. msig_subset Optional. Character vector MSigDB gene set names subset specified collection. Useful restrict analysis specific set pathways. supplied, filters apply subset. width_text Integer. Character wrap width labels. na_color Character. Color NA values heatmap. Default \"grey90\".","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/signature_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Signature Similarity via Jaccard Index or Fisher's Odds Ratio — signature_similarity","text":"ggplot heatmap object.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/signature_similarity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Signature Similarity via Jaccard Index or Fisher's Odds Ratio — signature_similarity","text":"","code":"sig1 <- list(A = c(\"TP53\", \"BRCA1\", \"EGFR\")) sig2 <- list(B = c(\"TP53\", \"MYC\", \"EGFR\"), C = c(\"GATA3\", \"STAT3\"))  signature_similarity(   signatures = sig1,   other_user_signatures = sig2 ) #> Error in signature_similarity(signatures = sig1, other_user_signatures = sig2): object 'or_label_threshold' not found"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ssGSEA_alternative.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative Implementation of Single-Sample Gene Set Enrichment Analysis (ssGSEA) — ssGSEA_alternative","title":"Alternative Implementation of Single-Sample Gene Set Enrichment Analysis (ssGSEA) — ssGSEA_alternative","text":"function computes enrichment score sample using alternative single-sample Gene Set Enrichment Analysis (ssGSEA) method. first maps gene sets gene indices present expression matrix, ranks genes sample, finally calculates weighted enrichment score based cumulative differences -set --set gene ranks. Source: https://rpubs.com/pranali018/SSGSEA","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ssGSEA_alternative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative Implementation of Single-Sample Gene Set Enrichment Analysis (ssGSEA) — ssGSEA_alternative","text":"","code":"ssGSEA_alternative(X, gene_sets, alpha = 0.25, scale = T, norm = F, single = T)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ssGSEA_alternative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alternative Implementation of Single-Sample Gene Set Enrichment Analysis (ssGSEA) — ssGSEA_alternative","text":"X numeric matrix gene expression values rows representing genes columns representing samples. Row names correspond gene identifiers. gene_sets list gene sets, element vector gene identifiers. function match identifiers row names X. alpha numeric value specifying exponent used weight ranking scores. Default 0.25. scale Logical; TRUE, cumulative difference normalized total number genes. Default TRUE. norm Logical; TRUE, enrichment scores normalized absolute difference maximum minimum scores. Default FALSE. single Logical; TRUE, function returns sum cumulative differences enrichment score. FALSE, maximum absolute cumulative difference used. Default TRUE.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ssGSEA_alternative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alternative Implementation of Single-Sample Gene Set Enrichment Analysis (ssGSEA) — ssGSEA_alternative","text":"matrix enrichment scores rows corresponding gene sets columns corresponding samples.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ssGSEA_alternative.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternative Implementation of Single-Sample Gene Set Enrichment Analysis (ssGSEA) — ssGSEA_alternative","text":"function performs following steps: Maps gene set indices genes X matching gene identifiers. Computes column-wise rankings gene expression matrix using ranking method (via colRanking function) tie resolution set 'average'. sample, orders gene ranks decreasing order. gene set sample, calculates: weighted contribution (rank_alpha) genes set raised power alpha. cumulative distribution functions (CDFs) genes within gene set (step_cdf_pos) gene set (step_cdf_neg). difference CDFs, optionally scaled number genes scale = TRUE. Depending single parameter, either sum differences (TRUE) maximum absolute difference (FALSE) used enrichment score gene set. Optionally normalizes final enrichment scores range values norm = TRUE.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/ssGSEA_alternative.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternative Implementation of Single-Sample Gene Set Enrichment Analysis (ssGSEA) — ssGSEA_alternative","text":"","code":"if (FALSE) { # \\dontrun{   # Create a sample gene expression matrix:   X <- matrix(rnorm(1000), nrow = 100, ncol = 10)   rownames(X) <- paste0(\"gene\", 1:100)    # Define example gene sets:   gene_sets <- list(     set1 = sample(rownames(X), 10),     set2 = sample(rownames(X), 15)   )    # Compute the ssGSEA enrichment scores:   es <- ssGSEA_alternative(X, gene_sets, alpha = 0.25, scale = TRUE, norm = FALSE, single = TRUE)   print(es) } # }"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/wrap_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap Long Titles with Capital Letter Prioritization (when no symbols are nearby) — wrap_title","title":"Wrap Long Titles with Capital Letter Prioritization (when no symbols are nearby) — wrap_title","text":"function wraps long titles multiple lines fit specified width, prioritizing breaks symbols like underscores, hyphens, colons close wrap point. special symbol found nearby, function break title first capital letter. neither found, title broken specified width.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/wrap_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap Long Titles with Capital Letter Prioritization (when no symbols are nearby) — wrap_title","text":"","code":"wrap_title(title, width = 30)"},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/wrap_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap Long Titles with Capital Letter Prioritization (when no symbols are nearby) — wrap_title","text":"title character string representing title wrapped. (Required) width numeric value specifying maximum width line. default 30 characters. (Optional)","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/reference/wrap_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap Long Titles with Capital Letter Prioritization (when no symbols are nearby) — wrap_title","text":"character string title wrapped multiple lines. line exceed specified width, breaks prioritized symbols nearby, capital letters used symbols present.","code":""},{"path":"https://diseasetranscriptomicslab.github.io/markeR/news/index.html","id":"marker-090-21-apr-2025","dir":"Changelog","previous_headings":"","what":"markeR 0.9.0 (21 Apr, 2025)","title":"markeR 0.9.0 (21 Apr, 2025)","text":"Initial release package. Implementation score-based enrichment-based methods evaluate gene signatures phenotype markers. Visualization individual genes’ expression, scores, enrichment results Add pkgdown documentation site: https://diseasetranscriptomicslab.github.io/markeR/","code":""}]
